!function(e){var n={};function t(i){if(n[i])return n[i].exports;var o=n[i]={i:i,l:!1,exports:{}};return e[i].call(o.exports,o,o.exports,t),o.l=!0,o.exports}t.m=e,t.c=n,t.d=function(e,n,i){t.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:i})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,n){if(1&n&&(e=t(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var i=Object.create(null);if(t.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var o in e)t.d(i,o,function(n){return e[n]}.bind(null,o));return i},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p="",t(t.s=6)}({0:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.default=function(){window.eventHub={events:{},emit:function(e,n){for(var t in this.events)t===e&&this.events[t].map(function(e){e.call(void 0,n)})},on:function(e,n){void 0===this.events[e]&&(this.events[e]=[]),this.events[e].push(n)}}}},1:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.default=function(){AV.init({appId:"IbKHNlRGRAFjYmmzC1gxhtdE-gzGzoHsz",appKey:"6SlQPqCcy8KwHVEhJpFeBFpG"})}},2:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.default=function(){({init:function(e,n){this.view=e,this.model=n,this.bindEvents(),this.bindEventHub()},bindEvents:function(){$(this.view.el).on("click",function(){window.eventHub.emit("newSongSheet")})},bindEventHub:function(){var e=this;window.eventHub.on("selectSongSheet",function(){e.view.deActive()}),window.eventHub.on("newSongSheet",function(){e.view.active()}),window.eventHub.on("creatSongSheetSuccess",function(){e.view.active()}),window.eventHub.on("deleteSongSheet",function(){e.view.active()})}}).init({el:".newSongSheet",active:function(){$(this.el).addClass("active")},deActive:function(){$(this.el).removeClass("active")}},{})}},26:function(e,n){},3:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var i=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i])}return e};n.default=function(){({init:function(e,n){this.view=e,this.model=n,this.view.render(this.model.data),this.bindEvents(),this.bindEventHub()},creatSongSheet:function(){var e=this,n={};["name","brief","cover"].map(function(t){n[t]=$(e.view.el).find('[name="'+t+'"]').val()}),this.model.create(n).then(function(){window.eventHub.emit("creatSongSheetSuccess",JSON.parse(JSON.stringify(e.model.data))),window.eventHub.emit("clearSongListAcitve",{songSheet:{name:"",cover:"",brief:"",id:""},songSheetSongs:[]}),e.view.reset()})},updateSongSheet:function(){var e=this,n={};["name","brief","cover"].map(function(t){n[t]=$(e.view.el).find('[name="'+t+'"]').val()}),this.model.update(n).then(function(){window.eventHub.emit("updateSongSheet",JSON.parse(JSON.stringify(e.model.data)))})},deleteSongSheet:function(){var e=this;this.model.delete(this.model.data).then(function(n){window.eventHub.emit("deleteSongSheet",{id:n}),window.eventHub.emit("clearSongListAcitve",{songSheet:{name:"",cover:"",brief:"",id:""},songSheetSongs:[]}),e.view.reset()})},bindEvents:function(){var e=this;$(this.view.el).on("click","li",function(n){var t=$(n.currentTarget).attr("data-song-id");e.model.data.songSheetSongs=e.model.data.songSheetSongs.filter(function(e){return e.id!==t}),e.view.renderSongListBox(e.model.data),window.eventHub.emit("deleteSong",JSON.parse(JSON.stringify(e.model.data)))}),$(this.view.el).on("click",".confirm",function(n){e.model.data.songSheet.id?e.updateSongSheet():e.creatSongSheet()}),$(this.view.el).on("click",".delete",function(n){e.model.data.songSheet.id&&e.deleteSongSheet()})},bindEventHub:function(){var e=this;window.eventHub.on("addSong",function(n){e.model.data.songSheetSongs=n.songSheetSongs,e.view.renderSongListBox(e.model.data)}),window.eventHub.on("selectSongSheet",function(n){e.model.data=n,e.view.render(e.model.data),e.view.renderSongListBox(e.model.data)}),window.eventHub.on("newSongSheet",function(){e.model.data.songSheet.id&&(e.model.data={songSheet:{name:"",cover:"",brief:"",id:""},songSheetSongs:[]},e.view.render(e.model.data),window.eventHub.emit("clearSongListAcitve",JSON.parse(JSON.stringify(e.model.data))))})}}).init({el:".editArea-wrapper",template:'\n      <div class="editArea">\n        <h1>新建歌单</h1>\n        <div class="row">\n          <label>歌单名称</label>\n          <input type="text" name="name" value="__name__">\n        </div>\n        <div class="row">\n          <label>歌单简介</label>\n          <textarea name="brief">__brief__</textarea>\n          </div>\n        <div class="row">\n          <label>封面外链</label>\n          <input type="text" name="cover" value="__cover__">\n        </div>\n        <div class="row">\n            <label>包含歌曲</label>\n            <ol class="songList-box"></ol>\n        </div>\n        <div class="button-wrapper">\n            <div class="button delete">删&nbsp;&nbsp;除</div>\n            <div class="button confirm">确&nbsp;&nbsp;定</div>\n        </div>\n      </div>\n    ',reset:function(){this.render(),this.renderSongListBox()},render:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{songSheet:{name:"",cover:"",brief:"",id:""},songSheetSongs:[]},n=e.songSheet.id?this.template.replace("新建歌单","编辑歌单"):this.template;["name","brief","cover"].map(function(t){n=n.replace("__"+t+"__",e.songSheet[t]||"")}),$(this.el).html(n)},renderSongListBox:function(){var e=this,n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{songSheet:{name:"",cover:"",brief:"",id:""},songSheetSongs:[]};$(this.el).find(".songList-box").empty(),n.songSheetSongs.length?n.songSheetSongs.map(function(n){$(e.el).find(".songList-box").append($('\n                <li class="song">\n                  __songName__\n                  <svg class="icon icon-delete1" aria-hidden="true">\n                    <use xlink:href="#icon-delete1"></use>\n                  </svg>\n                </li>\n              '.replace("__songName__",n.name)).attr("data-song-id",n.id))}):$(this.el).find(".songList-box").append($('<p class="prompt">请选取右列的歌曲加入本歌单</p>'))}},{data:{songSheet:{name:"",cover:"",brief:"",id:""},songSheetSongs:[]},create:function(e){var n=this,t=new(AV.Object.extend("SongSheet"));return t.save(e).then(function(e){var o=e.id,a=e.attributes;i(n.data.songSheet,i({id:o},a)),n.data.songSheetSongs.forEach(function(e){var n=AV.Object.createWithoutData("Song",e.id);n.set("dependent",t),n.save()})})},update:function(e){var n=this,t=AV.Object.createWithoutData("SongSheet",this.data.songSheet.id);return t.set("name",e.name),t.set("cover",e.cover),t.set("brief",e.brief),this.removeDependent(this.data.songSheet.id),t.save().then(function(e){i(n.data.songSheet,i({id:e.id},e.attributes)),n.data.songSheetSongs.forEach(function(e){var n=AV.Object.createWithoutData("Song",e.id);n.set("dependent",t),n.save()})})},delete:function(e){var n=this;return AV.Object.createWithoutData("SongSheet",e.songSheet.id).destroy().then(function(e){return n.data={songSheet:{name:"",cover:"",brief:"",id:""},songSheetSongs:[]},e.id})},removeDependent:function(e){var n=AV.Object.createWithoutData("SongSheet",e),t=new AV.Query("Song");t.equalTo("dependent",n),t.find().then(function(e){e.map(function(e){e=AV.Object.createWithoutData("Song",e.id);var n=AV.Object.createWithoutData("SongSheet","5b2a26779f54540035a990fe");return e.set("dependent",n),e.save()})})}})}},4:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var i=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i])}return e};n.default=function(){({init:function(e,n){this.view=e,this.model=n,this.bindEvents(),this.bindEventHub(),this.getAllSongs()},getAllSongs:function(){var e=this;return this.model.fetch().then(function(){e.view.render(e.model.data)})},bindEvents:function(){var e=this;$(this.view.el).on("click","li",function(n){var t=$(n.currentTarget).attr("data-song-id");if($(n.currentTarget).hasClass("active"))e.model.data.songSheetSongs=e.model.data.songSheetSongs.filter(function(e){return e.id!==t});else{var i=e.model.data.songs.find(function(e){return e.id===t}).name;e.model.data.songSheetSongs.push({id:t,name:i})}e.view.render(e.model.data);var o=JSON.parse(JSON.stringify(e.model.data));window.eventHub.emit("addSong",o)})},bindEventHub:function(){var e=this;window.eventHub.on("deleteSong",function(n){e.model.data.songSheetSongs=n.songSheetSongs,e.view.render(e.model.data)}),window.eventHub.on("selectSongSheet",function(n){e.model.data.songSheetSongs=n.songSheetSongs,e.view.render(e.model.data)}),window.eventHub.on("clearSongListAcitve",function(n){e.model.data.songSheetSongs=n.songSheetSongs,e.view.render(e.model.data)})}}).init({el:".songList",template:'\n      <li>\n        <svg class="icon icon-music" aria-hidden="true">\n          <use xlink:href="#icon-music"></use>\n        </svg>\n        <div class="songInfo">\n          <p title="{{name}}" class="song">{{name}}</p>\n          <p title="{{singer}}" class="singer">\n            <svg class="icon icon-music" aria-hidden="true">\n              <use xlink:href="#icon-geshou"></use>\n            </svg>\n            {{singer}}\n          </p>\n        </div>\n      </li>\n    ',render:function(e){var n=this;$(this.el).empty();var t=e.songs,i=e.songSheetSongs;t.map(function(e){for(var t=$(n.template.replace(/{{name}}/g,e.name).replace(/{{singer}}/g,e.singer)).attr("data-song-id",e.id),o=0;o<i.length;o++)if(i[o].id===e.id){t.addClass("active");break}$(n.el).append(t)})}},{data:{songs:[],songSheetSongs:[]},fetch:function(){var e=this;return new AV.Query("Song").find().then(function(n){e.data.songs=n.map(function(e){return i({id:e.id},e.attributes)})})}})}},5:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var i=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i])}return e};n.default=function(){({init:function(e,n){this.view=e,this.model=n,this.bindEvents(),this.bindEventHub(),this.getAllSongSheets()},getAllSongSheets:function(){var e=this;return this.model.fetch().then(function(){e.view.render(e.model.data)})},bindEvents:function(){var e=this;$(this.view.el).on("click","li",function(n){var t=$(n.currentTarget).attr("data-songSheet-id");e.model.data.selectSongSheetId=t,e.view.render(e.model.data),e.model.findSongSheetSongs(e.model.data.selectSongSheetId).then(function(){var n={};n.songSheetSongs=e.model.data.selectSongSheetSongs;for(var i=e.model.data.songSheets,o=0;o<i.length;o++)if(i[o].id===t){n.songSheet=i[o];break}var a=JSON.parse(JSON.stringify(n));window.eventHub.emit("selectSongSheet",a)})})},bindEventHub:function(){var e=this;window.eventHub.on("creatSongSheetSuccess",function(n){e.model.data.songSheets.push(n.songSheet),e.view.render(e.model.data)}),window.eventHub.on("deleteSongSheet",function(n){e.model.data.songSheets=e.model.data.songSheets.filter(function(e){return e.id!==n.id}),e.model.data.selectSongSheetId=void 0,e.view.render(e.model.data)}),window.eventHub.on("newSongSheet",function(){e.view.clearActive(),e.model.data.selectSongSheetSongs=[],e.model.data.selectSongSheetId=void 0}),window.eventHub.on("updateSongSheet",function(n){for(var t=e.model.data.songSheets,i=0;i<t.length;i++)t[i].id===n.songSheet.id&&(t[i]=n.songSheet);e.view.render(e.model.data)})}}).init({el:".songSheetList",template:'\n      <li>\n        <svg class="icon icon-playlist" aria-hidden="true">\n            <use xlink:href="#icon-playlist"></use>\n        </svg>\n        <p title="{{name}}" class="song">{{name}}</p>\n      </li>\n    ',render:function(e){var n=this;$(this.el).empty();var t=e.songSheets,i=e.selectSongSheetId;t.map(function(e){var t=$(n.template.replace(/{{name}}/g,e.name||"无名歌单")).attr("data-songSheet-id",e.id);e.id===i&&t.addClass("active"),$(n.el).append(t)})},clearActive:function(){$(this.el).find(".active").removeClass("active")}},{data:{songSheets:[],selectSongSheetId:void 0,selectSongSheetSongs:[]},fetch:function(){var e=this;return new AV.Query("SongSheet").find().then(function(n){e.data.songSheets=n.map(function(e){return i({id:e.id},e.attributes)})})},findSongSheetSongs:function(e){var n=this,t=AV.Object.createWithoutData("SongSheet",e),o=new AV.Query("Song");return o.equalTo("dependent",t),o.find().then(function(e){n.data.selectSongSheetSongs=e.map(function(e){return i({id:e.id},e.attributes)})})}})}},6:function(e,n,t){"use strict";t(26);var i=c(t(1)),o=c(t(0)),a=c(t(5)),s=c(t(4)),d=c(t(3)),r=c(t(2));function c(e){return e&&e.__esModule?e:{default:e}}(0,i.default)(),(0,o.default)(),(0,a.default)(),(0,s.default)(),(0,d.default)(),(0,r.default)()}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,