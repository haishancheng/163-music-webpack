!function(e){var n={};function t(i){if(n[i])return n[i].exports;var o=n[i]={i:i,l:!1,exports:{}};return e[i].call(o.exports,o,o.exports,t),o.l=!0,o.exports}t.m=e,t.c=n,t.d=function(e,n,i){t.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:i})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,n){if(1&n&&(e=t(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var i=Object.create(null);if(t.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var o in e)t.d(i,o,function(n){return e[n]}.bind(null,o));return i},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p="",t(t.s=10)}({0:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.default=function(){window.eventHub={events:{},emit:function(e,n){for(var t in this.events)t===e&&this.events[t].map(function(e){e.call(void 0,n)})},on:function(e,n){void 0===this.events[e]&&(this.events[e]=[]),this.events[e].push(n)}}}},1:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.default=function(){AV.init({appId:"IbKHNlRGRAFjYmmzC1gxhtdE-gzGzoHsz",appKey:"6SlQPqCcy8KwHVEhJpFeBFpG"})}},10:function(e,n,t){"use strict";t(32);var i=c(t(1)),o=c(t(0)),a=c(t(9)),s=c(t(8)),d=c(t(7)),r=c(t(6));function c(e){return e&&e.__esModule?e:{default:e}}(0,i.default)(),(0,o.default)(),(0,a.default)(),(0,s.default)(),(0,d.default)(),(0,r.default)()},32:function(e,n){},6:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.default=function(){({init:function(e,n){this.view=e,this.model=n,this.bindEvents(),this.bindEventHub()},bindEvents:function(){$(this.view.el).on("click",function(){window.eventHub.emit("newSongSheet")})},bindEventHub:function(){var e=this;window.eventHub.on("selectSongSheet",function(){e.view.deActive()}),window.eventHub.on("newSongSheet",function(){e.view.active()}),window.eventHub.on("creatSongSheetSuccess",function(){e.view.active()}),window.eventHub.on("deleteSongSheet",function(){e.view.active()})}}).init({el:".newSongSheet",active:function(){$(this.el).addClass("active")},deActive:function(){$(this.el).removeClass("active")}},{})}},7:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var i=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i])}return e};n.default=function(){({init:function(e,n){this.view=e,this.model=n,this.view.render(this.model.data),this.bindEvents(),this.bindEventHub()},creatSongSheet:function(){var e=this,n={};["name","brief","cover"].map(function(t){n[t]=$(e.view.el).find('[name="'+t+'"]').val()}),this.model.create(n).then(function(){window.eventHub.emit("creatSongSheetSuccess",JSON.parse(JSON.stringify(e.model.data))),window.eventHub.emit("clearSongListAcitve",{songSheet:{name:"",cover:"",brief:"",id:""},songSheetSongs:[]}),e.view.reset()})},updateSongSheet:function(){var e=this,n={};["name","brief","cover"].map(function(t){n[t]=$(e.view.el).find('[name="'+t+'"]').val()}),this.model.update(n).then(function(){window.eventHub.emit("updateSongSheet",JSON.parse(JSON.stringify(e.model.data)))})},deleteSongSheet:function(){var e=this;this.model.delete(this.model.data).then(function(n){window.eventHub.emit("deleteSongSheet",{id:n}),window.eventHub.emit("clearSongListAcitve",{songSheet:{name:"",cover:"",brief:"",id:""},songSheetSongs:[]}),e.view.reset()})},bindEvents:function(){var e=this;$(this.view.el).on("click","li",function(n){var t=$(n.currentTarget).attr("data-song-id");e.model.data.songSheetSongs=e.model.data.songSheetSongs.filter(function(e){return e.id!==t}),e.view.renderSongListBox(e.model.data),window.eventHub.emit("deleteSong",JSON.parse(JSON.stringify(e.model.data)))}),$(this.view.el).on("click",".confirm",function(n){e.model.data.songSheet.id?e.updateSongSheet():e.creatSongSheet()}),$(this.view.el).on("click",".delete",function(n){e.model.data.songSheet.id&&e.deleteSongSheet()})},bindEventHub:function(){var e=this;window.eventHub.on("addSong",function(n){e.model.data.songSheetSongs=n.songSheetSongs,e.view.renderSongListBox(e.model.data)}),window.eventHub.on("selectSongSheet",function(n){e.model.data=n,e.view.render(e.model.data),e.view.renderSongListBox(e.model.data)}),window.eventHub.on("newSongSheet",function(){e.model.data.songSheet.id&&(e.model.data={songSheet:{name:"",cover:"",brief:"",id:""},songSheetSongs:[]},e.view.render(e.model.data),window.eventHub.emit("clearSongListAcitve",JSON.parse(JSON.stringify(e.model.data))))})}}).init({el:".editArea-wrapper",template:'\n      <div class="editArea">\n        <h1>新建歌单</h1>\n        <div class="row">\n          <label>歌单名称</label>\n          <input type="text" name="name" value="__name__">\n        </div>\n        <div class="row">\n          <label>歌单简介</label>\n          <textarea name="brief">__brief__</textarea>\n          </div>\n        <div class="row">\n          <label>封面外链</label>\n          <input type="text" name="cover" value="__cover__">\n        </div>\n        <div class="row">\n            <label>包含歌曲</label>\n            <ol class="songList-box"></ol>\n        </div>\n        <div class="button-wrapper">\n            <div class="button delete">删&nbsp;&nbsp;除</div>\n            <div class="button confirm">确&nbsp;&nbsp;定</div>\n        </div>\n      </div>\n    ',reset:function(){this.render(),this.renderSongListBox()},render:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{songSheet:{name:"",cover:"",brief:"",id:""},songSheetSongs:[]},n=e.songSheet.id?this.template.replace("新建歌单","编辑歌单"):this.template;["name","brief","cover"].map(function(t){n=n.replace("__"+t+"__",e.songSheet[t]||"")}),$(this.el).html(n)},renderSongListBox:function(){var e=this,n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{songSheet:{name:"",cover:"",brief:"",id:""},songSheetSongs:[]};$(this.el).find(".songList-box").empty(),n.songSheetSongs.length?n.songSheetSongs.map(function(n){$(e.el).find(".songList-box").append($('\n                <li class="song">\n                  __songName__\n                  <svg class="icon icon-delete1" aria-hidden="true">\n                    <use xlink:href="#icon-delete1"></use>\n                  </svg>\n                </li>\n              '.replace("__songName__",n.name)).attr("data-song-id",n.id))}):$(this.el).find(".songList-box").append($('<p class="prompt">请选取右列的歌曲加入本歌单</p>'))}},{data:{songSheet:{name:"",cover:"",brief:"",id:""},songSheetSongs:[]},create:function(e){var n=this,t=new(AV.Object.extend("SongSheet"));return t.save(e).then(function(e){var o=e.id,a=e.attributes;i(n.data.songSheet,i({id:o},a)),n.data.songSheetSongs.forEach(function(e){var n=AV.Object.createWithoutData("Song",e.id);n.set("dependent",t),n.save()})})},update:function(e){var n=this,t=AV.Object.createWithoutData("SongSheet",this.data.songSheet.id);return t.set("name",e.name),t.set("cover",e.cover),t.set("brief",e.brief),this.removeDependent(this.data.songSheet.id),t.save().then(function(e){i(n.data.songSheet,i({id:e.id},e.attributes)),n.data.songSheetSongs.forEach(function(e){var n=AV.Object.createWithoutData("Song",e.id);n.set("dependent",t),n.save()})})},delete:function(e){var n=this;return AV.Object.createWithoutData("SongSheet",e.songSheet.id).destroy().then(function(e){return n.data={songSheet:{name:"",cover:"",brief:"",id:""},songSheetSongs:[]},e.id})},removeDependent:function(e){var n=AV.Object.createWithoutData("SongSheet",e),t=new AV.Query("Song");t.equalTo("dependent",n),t.find().then(function(e){e.map(function(e){e=AV.Object.createWithoutData("Song",e.id);var n=AV.Object.createWithoutData("SongSheet","5b2a26779f54540035a990fe");return e.set("dependent",n),e.save()})})}})}},8:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var i=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i])}return e};n.default=function(){({init:function(e,n){this.view=e,this.model=n,this.bindEvents(),this.bindEventHub(),this.getAllSongs()},getAllSongs:function(){var e=this;return this.model.fetch().then(function(){e.view.render(e.model.data)})},bindEvents:function(){var e=this;$(this.view.el).on("click","li",function(n){var t=$(n.currentTarget).attr("data-song-id");if($(n.currentTarget).hasClass("active"))e.model.data.songSheetSongs=e.model.data.songSheetSongs.filter(function(e){return e.id!==t});else{var i=e.model.data.songs.find(function(e){return e.id===t}).name;e.model.data.songSheetSongs.push({id:t,name:i})}e.view.render(e.model.data);var o=JSON.parse(JSON.stringify(e.model.data));window.eventHub.emit("addSong",o)})},bindEventHub:function(){var e=this;window.eventHub.on("deleteSong",function(n){e.model.data.songSheetSongs=n.songSheetSongs,e.view.render(e.model.data)}),window.eventHub.on("selectSongSheet",function(n){e.model.data.songSheetSongs=n.songSheetSongs,e.view.render(e.model.data)}),window.eventHub.on("clearSongListAcitve",function(n){e.model.data.songSheetSongs=n.songSheetSongs,e.view.render(e.model.data)})}}).init({el:".songList",template:'\n      <li>\n        <svg class="icon icon-music" aria-hidden="true">\n          <use xlink:href="#icon-music"></use>\n        </svg>\n        <div class="songInfo">\n          <p title="{{name}}" class="song">{{name}}</p>\n          <p title="{{singer}}" class="singer">\n            <svg class="icon icon-music" aria-hidden="true">\n              <use xlink:href="#icon-geshou"></use>\n            </svg>\n            {{singer}}\n          </p>\n        </div>\n      </li>\n    ',render:function(e){var n=this;$(this.el).empty();var t=e.songs,i=e.songSheetSongs;t.map(function(e){for(var t=$(n.template.replace(/{{name}}/g,e.name).replace(/{{singer}}/g,e.singer)).attr("data-song-id",e.id),o=0;o<i.length;o++)if(i[o].id===e.id){t.addClass("active");break}$(n.el).append(t)})}},{data:{songs:[],songSheetSongs:[]},fetch:function(){var e=this;return new AV.Query("Song").find().then(function(n){e.data.songs=n.map(function(e){return i({id:e.id},e.attributes)})})}})}},9:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var i=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i])}return e};n.default=function(){({init:function(e,n){this.view=e,this.model=n,this.bindEvents(),this.bindEventHub(),this.getAllSongSheets()},getAllSongSheets:function(){var e=this;return this.model.fetch().then(function(){e.view.render(e.model.data)})},bindEvents:function(){var e=this;$(this.view.el).on("click","li",function(n){var t=$(n.currentTarget).attr("data-songSheet-id");e.model.data.selectSongSheetId=t,e.view.render(e.model.data),e.model.findSongSheetSongs(e.model.data.selectSongSheetId).then(function(){var n={};n.songSheetSongs=e.model.data.selectSongSheetSongs;for(var i=e.model.data.songSheets,o=0;o<i.length;o++)if(i[o].id===t){n.songSheet=i[o];break}var a=JSON.parse(JSON.stringify(n));window.eventHub.emit("selectSongSheet",a)})})},bindEventHub:function(){var e=this;window.eventHub.on("creatSongSheetSuccess",function(n){e.model.data.songSheets.push(n.songSheet),e.view.render(e.model.data)}),window.eventHub.on("deleteSongSheet",function(n){e.model.data.songSheets=e.model.data.songSheets.filter(function(e){return e.id!==n.id}),e.model.data.selectSongSheetId=void 0,e.view.render(e.model.data)}),window.eventHub.on("newSongSheet",function(){e.view.clearActive(),e.model.data.selectSongSheetSongs=[],e.model.data.selectSongSheetId=void 0}),window.eventHub.on("updateSongSheet",function(n){for(var t=e.model.data.songSheets,i=0;i<t.length;i++)t[i].id===n.songSheet.id&&(t[i]=n.songSheet);e.view.render(e.model.data)})}}).init({el:".songSheetList",template:'\n      <li>\n        <svg class="icon icon-playlist" aria-hidden="true">\n            <use xlink:href="#icon-playlist"></use>\n        </svg>\n        <p title="{{name}}" class="song">{{name}}</p>\n      </li>\n    ',render:function(e){var n=this;$(this.el).empty();var t=e.songSheets,i=e.selectSongSheetId;t.map(function(e){var t=$(n.template.replace(/{{name}}/g,e.name||"无名歌单")).attr("data-songSheet-id",e.id);e.id===i&&t.addClass("active"),$(n.el).append(t)})},clearActive:function(){$(this.el).find(".active").removeClass("active")}},{data:{songSheets:[],selectSongSheetId:void 0,selectSongSheetSongs:[]},fetch:function(){var e=this;return new AV.Query("SongSheet").find().then(function(n){e.data.songSheets=n.map(function(e){return i({id:e.id},e.attributes)})})},findSongSheetSongs:function(e){var n=this,t=AV.Object.createWithoutData("SongSheet",e),o=new AV.Query("Song");return o.equalTo("dependent",t),o.find().then(function(e){n.data.selectSongSheetSongs=e.map(function(e){return i({id:e.id},e.attributes)})})}})}}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vc3JjL2pzL2NvbW1vbi9ldmVudC1odWIuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2pzL2NvbW1vbi9hdi5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvanMvc29uZ1NoZWV0QWRtaW4vc29uZ1NoZWV0QWRtaW5FbnRyeS5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvanMvc29uZ1NoZWV0QWRtaW4vbmV3U29uZ1NoZWV0LmpzIiwid2VicGFjazovLy8uL3NyYy9qcy9zb25nU2hlZXRBZG1pbi9lZGl0U29uZ1NoZWV0LmpzIiwid2VicGFjazovLy8uL3NyYy9qcy9zb25nU2hlZXRBZG1pbi9zb25nTGlzdC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvanMvc29uZ1NoZWV0QWRtaW4vc29uZ1NoZWV0TGlzdC5qcyJdLCJuYW1lcyI6WyJpbnN0YWxsZWRNb2R1bGVzIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiZXhwb3J0cyIsIm1vZHVsZSIsImkiLCJsIiwibW9kdWxlcyIsImNhbGwiLCJtIiwiYyIsImQiLCJuYW1lIiwiZ2V0dGVyIiwibyIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsInIiLCJTeW1ib2wiLCJ0b1N0cmluZ1RhZyIsInZhbHVlIiwidCIsIm1vZGUiLCJfX2VzTW9kdWxlIiwibnMiLCJjcmVhdGUiLCJrZXkiLCJiaW5kIiwibiIsIm9iamVjdCIsInByb3BlcnR5IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJwIiwicyIsIndpbmRvdyIsImV2ZW50SHViIiwiZXZlbnRzIiwiZW1pdCIsImV2ZW50TmFtZSIsImRhdGEiLCJ0aGlzIiwibWFwIiwiZm4iLCJ1bmRlZmluZWQiLCJvbiIsInB1c2giLCJBViIsImluaXQiLCJhcHBJZCIsImFwcEtleSIsIl9hdjIiLCJkZWZhdWx0IiwiX2V2ZW50SHViMiIsIl9zb25nU2hlZXRMaXN0MiIsIl9zb25nTGlzdDIiLCJfZWRpdFNvbmdTaGVldDIiLCJfbmV3U29uZ1NoZWV0MiIsInZpZXciLCJtb2RlbCIsImJpbmRFdmVudHMiLCJiaW5kRXZlbnRIdWIiLCIkIiwiZWwiLCJfdGhpcyIsImRlQWN0aXZlIiwiYWN0aXZlIiwiYWRkQ2xhc3MiLCJyZW1vdmVDbGFzcyIsInJlbmRlciIsImNyZWF0U29uZ1NoZWV0IiwiX3RoaXM1IiwibmVlZCIsImZpbmQiLCJ2YWwiLCJ0aGVuIiwiSlNPTiIsInBhcnNlIiwic3RyaW5naWZ5Iiwic29uZ1NoZWV0IiwiY292ZXIiLCJicmllZiIsImlkIiwic29uZ1NoZWV0U29uZ3MiLCJyZXNldCIsInVwZGF0ZVNvbmdTaGVldCIsIl90aGlzNiIsInVwZGF0ZSIsImRlbGV0ZVNvbmdTaGVldCIsIl90aGlzNyIsImRlbGV0ZSIsIl90aGlzOCIsImUiLCJjdXJyZW50VGFyZ2V0IiwiYXR0ciIsImZpbHRlciIsInNvbmdTaGVldFNvbmciLCJyZW5kZXJTb25nTGlzdEJveCIsIl90aGlzOSIsInRlbXBsYXRlIiwiYXJndW1lbnRzIiwibGVuZ3RoIiwiaHRtbCIsInJlcGxhY2UiLCJwbGFjZWhvbGRlciIsImVtcHR5IiwiYXBwZW5kIiwiX3RoaXMyIiwiZXh0ZW5kIiwic2F2ZSIsIm5ld1NvbmdTaGVldCIsImF0dHJpYnV0ZXMiLCJfZXh0ZW5kcyIsImZvckVhY2giLCJzb25nIiwiY3JlYXRlV2l0aG91dERhdGEiLCJzZXQiLCJfdGhpczMiLCJyZW1vdmVEZXBlbmRlbnQiLCJfdGhpczQiLCJkZXN0cm95Iiwic3VjY2VzcyIsInNvbmdTaGVldElkIiwicXVlcnkiLCJRdWVyeSIsImVxdWFsVG8iLCJzb25ncyIsInNvbmdTaGVldDIiLCJnZXRBbGxTb25ncyIsImZldGNoIiwic29uZ0lkIiwiaGFzQ2xhc3MiLCJzb25nTmFtZSIsIiRsaSIsInNpbmdlciIsImdldEFsbFNvbmdTaGVldHMiLCJzZWxlY3RTb25nU2hlZXRJZCIsImZpbmRTb25nU2hlZXRTb25ncyIsInNlbGVjdFNvbmdTaGVldFNvbmdzIiwic29uZ1NoZWV0cyIsImNsZWFyQWN0aXZlIl0sIm1hcHBpbmdzIjoiYUFDQSxJQUFBQSxLQUdBLFNBQUFDLEVBQUFDLEdBR0EsR0FBQUYsRUFBQUUsR0FDQSxPQUFBRixFQUFBRSxHQUFBQyxRQUdBLElBQUFDLEVBQUFKLEVBQUFFLElBQ0FHLEVBQUFILEVBQ0FJLEdBQUEsRUFDQUgsWUFVQSxPQU5BSSxFQUFBTCxHQUFBTSxLQUFBSixFQUFBRCxRQUFBQyxJQUFBRCxRQUFBRixHQUdBRyxFQUFBRSxHQUFBLEVBR0FGLEVBQUFELFFBS0FGLEVBQUFRLEVBQUFGLEVBR0FOLEVBQUFTLEVBQUFWLEVBR0FDLEVBQUFVLEVBQUEsU0FBQVIsRUFBQVMsRUFBQUMsR0FDQVosRUFBQWEsRUFBQVgsRUFBQVMsSUFDQUcsT0FBQUMsZUFBQWIsRUFBQVMsR0FBMENLLFlBQUEsRUFBQUMsSUFBQUwsS0FLMUNaLEVBQUFrQixFQUFBLFNBQUFoQixHQUNBLG9CQUFBaUIsZUFBQUMsYUFDQU4sT0FBQUMsZUFBQWIsRUFBQWlCLE9BQUFDLGFBQXdEQyxNQUFBLFdBRXhEUCxPQUFBQyxlQUFBYixFQUFBLGNBQWlEbUIsT0FBQSxLQVFqRHJCLEVBQUFzQixFQUFBLFNBQUFELEVBQUFFLEdBRUEsR0FEQSxFQUFBQSxJQUFBRixFQUFBckIsRUFBQXFCLElBQ0EsRUFBQUUsRUFBQSxPQUFBRixFQUNBLEtBQUFFLEdBQUEsaUJBQUFGLFFBQUFHLFdBQUEsT0FBQUgsRUFDQSxJQUFBSSxFQUFBWCxPQUFBWSxPQUFBLE1BR0EsR0FGQTFCLEVBQUFrQixFQUFBTyxHQUNBWCxPQUFBQyxlQUFBVSxFQUFBLFdBQXlDVCxZQUFBLEVBQUFLLFVBQ3pDLEVBQUFFLEdBQUEsaUJBQUFGLEVBQUEsUUFBQU0sS0FBQU4sRUFBQXJCLEVBQUFVLEVBQUFlLEVBQUFFLEVBQUEsU0FBQUEsR0FBZ0gsT0FBQU4sRUFBQU0sSUFBcUJDLEtBQUEsS0FBQUQsSUFDckksT0FBQUYsR0FJQXpCLEVBQUE2QixFQUFBLFNBQUExQixHQUNBLElBQUFTLEVBQUFULEtBQUFxQixXQUNBLFdBQTJCLE9BQUFyQixFQUFBLFNBQzNCLFdBQWlDLE9BQUFBLEdBRWpDLE9BREFILEVBQUFVLEVBQUFFLEVBQUEsSUFBQUEsR0FDQUEsR0FJQVosRUFBQWEsRUFBQSxTQUFBaUIsRUFBQUMsR0FBc0QsT0FBQWpCLE9BQUFrQixVQUFBQyxlQUFBMUIsS0FBQXVCLEVBQUFDLElBR3REL0IsRUFBQWtDLEVBQUEsR0FJQWxDLElBQUFtQyxFQUFBLGdHQ2xGZSxXQUViQyxPQUFPQyxVQUNMQyxVQUtBQyxLQU5nQixTQU1YQyxFQUFXQyxHQUNkLElBQUksSUFBSWQsS0FBT2UsS0FBS0osT0FDZlgsSUFBUWEsR0FDVEUsS0FBS0osT0FBT1gsR0FBS2dCLElBQUksU0FBQ0MsR0FDcEJBLEVBQUdyQyxVQUFLc0MsRUFBV0osTUFLM0JLLEdBZmdCLFNBZWJOLEVBQVdJLFFBQ2tCQyxJQUEzQkgsS0FBS0osT0FBT0UsS0FDYkUsS0FBS0osT0FBT0UsT0FFZEUsS0FBS0osT0FBT0UsR0FBV08sS0FBS0gsaUdDckJuQixXQUdiSSxHQUFHQyxNQUNEQyxNQUhXLG9DQUlYQyxPQUhZLCtEQ0ZoQm5ELEVBQUEsSUFFQSxRQUFBQSxFQUFBLFFBQ0FBLEVBQUEsUUFDQUEsRUFBQSxRQUNBQSxFQUFBLFFBQ0FBLEVBQUEsUUFDQUEsRUFBQSx3REFFQSxFQUFBb0QsRUFBQUMsWUFDQSxFQUFBQyxFQUFBRCxZQUNBLEVBQUFFLEVBQUFGLFlBQ0EsRUFBQUcsRUFBQUgsWUFDQSxFQUFBSSxFQUFBSixZQUNBLEVBQUFLLEVBQUFMLHlIQ2RlLGFBZ0JYSixLQURlLFNBQ1ZVLEVBQU1DLEdBQ1RsQixLQUFLaUIsS0FBT0EsRUFDWmpCLEtBQUtrQixNQUFRQSxFQUNibEIsS0FBS21CLGFBQ0xuQixLQUFLb0IsZ0JBRVBELFdBUGUsV0FRYkUsRUFBRXJCLEtBQUtpQixLQUFLSyxJQUFJbEIsR0FBRyxRQUFTLFdBQzFCVixPQUFPQyxTQUFTRSxLQUFLLG1CQUd6QnVCLGFBWmUsV0FZRCxJQUFBRyxFQUFBdkIsS0FDWk4sT0FBT0MsU0FBU1MsR0FBRyxrQkFBbUIsV0FDcENtQixFQUFLTixLQUFLTyxhQUVaOUIsT0FBT0MsU0FBU1MsR0FBRyxlQUFnQixXQUNqQ21CLEVBQUtOLEtBQUtRLFdBRVovQixPQUFPQyxTQUFTUyxHQUFHLHdCQUF5QixXQUMxQ21CLEVBQUtOLEtBQUtRLFdBRVovQixPQUFPQyxTQUFTUyxHQUFHLGtCQUFtQixXQUNwQ21CLEVBQUtOLEtBQUtRLGNBSUxsQixNQXhDVGUsR0FBSSxnQkFDSkcsT0FGUyxXQUdQSixFQUFFckIsS0FBS3NCLElBQUlJLFNBQVMsV0FFdEJGLFNBTFMsV0FNUEgsRUFBRXJCLEtBQUtzQixJQUFJSyxZQUFZLG9SQ1BkLGFBZ0lYcEIsS0FEZSxTQUNWVSxFQUFNQyxHQUNUbEIsS0FBS2lCLEtBQU9BLEVBQ1pqQixLQUFLa0IsTUFBUUEsRUFDYmxCLEtBQUtpQixLQUFLVyxPQUFPNUIsS0FBS2tCLE1BQU1uQixNQUM1QkMsS0FBS21CLGFBQ0xuQixLQUFLb0IsZ0JBRVBTLGVBUmUsV0FRQyxJQUFBQyxFQUFBOUIsS0FFVkQsTUFEUyxPQUFRLFFBQVEsU0FFdkJFLElBQUksU0FBQzhCLEdBQ1BoQyxFQUFLZ0MsR0FBUVYsRUFBRVMsRUFBS2IsS0FBS0ssSUFBSVUsS0FBaEIsVUFBK0JELEVBQS9CLE1BQXlDRSxRQUUxRGpDLEtBQUtrQixNQUFNbEMsT0FBT2UsR0FBTW1DLEtBQUssV0FDM0J4QyxPQUFPQyxTQUFTRSxLQUFLLHdCQUF5QnNDLEtBQUtDLE1BQU1ELEtBQUtFLFVBQVVQLEVBQUtaLE1BQU1uQixRQUNuRkwsT0FBT0MsU0FBU0UsS0FBSyx1QkFBdUJ5QyxXQUFXckUsS0FBSyxHQUFHc0UsTUFBTSxHQUFHQyxNQUFNLEdBQUdDLEdBQUcsSUFBS0Msb0JBQ3pGWixFQUFLYixLQUFLMEIsV0FHZEMsZ0JBcEJlLFdBb0JFLElBQUFDLEVBQUE3QyxLQUVYRCxNQURTLE9BQVEsUUFBUSxTQUV2QkUsSUFBSSxTQUFDOEIsR0FDUGhDLEVBQUtnQyxHQUFRVixFQUFFd0IsRUFBSzVCLEtBQUtLLElBQUlVLEtBQWhCLFVBQStCRCxFQUEvQixNQUF5Q0UsUUFFMURqQyxLQUFLa0IsTUFBTTRCLE9BQU8vQyxHQUFNbUMsS0FBSyxXQUUzQnhDLE9BQU9DLFNBQVNFLEtBQUssa0JBQW1Cc0MsS0FBS0MsTUFBTUQsS0FBS0UsVUFBVVEsRUFBSzNCLE1BQU1uQixXQUlqRmdELGdCQWhDZSxXQWdDRSxJQUFBQyxFQUFBaEQsS0FDZkEsS0FBS2tCLE1BQU0rQixPQUFPakQsS0FBS2tCLE1BQU1uQixNQUFNbUMsS0FBSyxTQUFDTyxHQUN2Qy9DLE9BQU9DLFNBQVNFLEtBQUssbUJBQW9CNEMsR0FBSUEsSUFDN0MvQyxPQUFPQyxTQUFTRSxLQUFLLHVCQUF1QnlDLFdBQVdyRSxLQUFLLEdBQUdzRSxNQUFNLEdBQUdDLE1BQU0sR0FBR0MsR0FBRyxJQUFLQyxvQkFDekZNLEVBQUsvQixLQUFLMEIsV0FHZHhCLFdBdkNlLFdBdUNILElBQUErQixFQUFBbEQsS0FDVnFCLEVBQUVyQixLQUFLaUIsS0FBS0ssSUFBSWxCLEdBQUcsUUFBUyxLQUFNLFNBQUMrQyxHQUNqQyxJQUFJVixFQUFLcEIsRUFBRThCLEVBQUVDLGVBQWVDLEtBQUssZ0JBQ2pDSCxFQUFLaEMsTUFBTW5CLEtBQUsyQyxlQUFpQlEsRUFBS2hDLE1BQU1uQixLQUFLMkMsZUFBZVksT0FBTyxTQUFDQyxHQUN0RSxPQUFPQSxFQUFjZCxLQUFPQSxJQUU5QlMsRUFBS2pDLEtBQUt1QyxrQkFBa0JOLEVBQUtoQyxNQUFNbkIsTUFDdkNMLE9BQU9DLFNBQVNFLEtBQUssYUFBY3NDLEtBQUtDLE1BQU1ELEtBQUtFLFVBQVVhLEVBQUtoQyxNQUFNbkIsVUFFMUVzQixFQUFFckIsS0FBS2lCLEtBQUtLLElBQUlsQixHQUFHLFFBQVMsV0FBWSxTQUFDK0MsR0FDcENELEVBQUtoQyxNQUFNbkIsS0FBS3VDLFVBQVVHLEdBRTNCUyxFQUFLTixrQkFHTE0sRUFBS3JCLG1CQUdUUixFQUFFckIsS0FBS2lCLEtBQUtLLElBQUlsQixHQUFHLFFBQVMsVUFBVyxTQUFDK0MsR0FDbkNELEVBQUtoQyxNQUFNbkIsS0FBS3VDLFVBQVVHLElBQzNCUyxFQUFLSCxxQkFJWDNCLGFBL0RlLFdBK0RELElBQUFxQyxFQUFBekQsS0FDWk4sT0FBT0MsU0FBU1MsR0FBRyxVQUFXLFNBQUNMLEdBQzdCMEQsRUFBS3ZDLE1BQU1uQixLQUFLMkMsZUFBaUIzQyxFQUFLMkMsZUFDdENlLEVBQUt4QyxLQUFLdUMsa0JBQWtCQyxFQUFLdkMsTUFBTW5CLFFBRXpDTCxPQUFPQyxTQUFTUyxHQUFHLGtCQUFtQixTQUFDTCxHQUNyQzBELEVBQUt2QyxNQUFNbkIsS0FBT0EsRUFDbEIwRCxFQUFLeEMsS0FBS1csT0FBTzZCLEVBQUt2QyxNQUFNbkIsTUFDNUIwRCxFQUFLeEMsS0FBS3VDLGtCQUFrQkMsRUFBS3ZDLE1BQU1uQixRQUV6Q0wsT0FBT0MsU0FBU1MsR0FBRyxlQUFlLFdBQzdCcUQsRUFBS3ZDLE1BQU1uQixLQUFLdUMsVUFBVUcsS0FDM0JnQixFQUFLdkMsTUFBTW5CLE1BQVF1QyxXQUFXckUsS0FBSyxHQUFHc0UsTUFBTSxHQUFHQyxNQUFNLEdBQUdDLEdBQUcsSUFBS0MsbUJBQ2hFZSxFQUFLeEMsS0FBS1csT0FBTzZCLEVBQUt2QyxNQUFNbkIsTUFDNUJMLE9BQU9DLFNBQVNFLEtBQUssc0JBQXVCc0MsS0FBS0MsTUFBTUQsS0FBS0UsVUFBVW9CLEVBQUt2QyxNQUFNbkIsY0FNOUVRLE1BaE5UZSxHQUFJLG9CQUNKb0MsK3dCQXlCQWYsTUEzQlMsV0E0QlAzQyxLQUFLNEIsU0FDTDVCLEtBQUt3RCxxQkFFUDVCLE9BL0JTLFdBK0JzRSxJQUF4RTdCLEVBQXdFNEQsVUFBQUMsT0FBQSxRQUFBekQsSUFBQXdELFVBQUEsR0FBQUEsVUFBQSxJQUFoRXJCLFdBQVdyRSxLQUFLLEdBQUdzRSxNQUFNLEdBQUdDLE1BQU0sR0FBR0MsR0FBRyxJQUFLQyxtQkFFdERtQixFQUFPOUQsRUFBS3VDLFVBQVVHLEdBQUt6QyxLQUFLMEQsU0FBU0ksUUFBUSxPQUFPLFFBQVU5RCxLQUFLMEQsVUFEdkQsT0FBUSxRQUFTLFNBR3hCekQsSUFBSSxTQUFDOEQsR0FDaEJGLEVBQU9BLEVBQUtDLFFBQUwsS0FBa0JDLEVBQWxCLEtBQW1DaEUsRUFBS3VDLFVBQVV5QixJQUFnQixNQUUzRTFDLEVBQUVyQixLQUFLc0IsSUFBSXVDLEtBQUtBLElBRWxCTCxrQkF4Q1MsV0F3Q2lGLElBQUFqQyxFQUFBdkIsS0FBeEVELEVBQXdFNEQsVUFBQUMsT0FBQSxRQUFBekQsSUFBQXdELFVBQUEsR0FBQUEsVUFBQSxJQUFoRXJCLFdBQVdyRSxLQUFLLEdBQUdzRSxNQUFNLEdBQUdDLE1BQU0sR0FBR0MsR0FBRyxJQUFLQyxtQkFDckVyQixFQUFFckIsS0FBS3NCLElBQUlVLEtBQUssaUJBQWlCZ0MsUUFDOUJqRSxFQUFLMkMsZUFBZWtCLE9BQ3JCN0QsRUFBSzJDLGVBQWV6QyxJQUFJLFNBQUNzRCxHQUN2QmxDLEVBQUVFLEVBQUtELElBQUlVLEtBQUssaUJBQWlCaUMsT0FDL0I1QyxFQUFFLHlRQU9FeUMsUUFBUSxlQUFnQlAsRUFBY3RGLE9BQ3hDb0YsS0FBSyxlQUFnQkUsRUFBY2QsT0FJekNwQixFQUFFckIsS0FBS3NCLElBQUlVLEtBQUssaUJBQWlCaUMsT0FBTzVDLEVBQUUsMkNBTTlDdEIsTUFDRXVDLFdBQ0VyRSxLQUFLLEdBQUlzRSxNQUFNLEdBQUlDLE1BQU0sR0FBSUMsR0FBRyxJQUVsQ0MsbUJBRUYxRCxPQVBVLFNBT0hlLEdBQUssSUFBQW1FLEVBQUFsRSxLQUVOc0MsRUFBWSxJQURBaEMsR0FBR2xDLE9BQU8rRixPQUFPLGNBR2pDLE9BQU83QixFQUFVOEIsS0FBS3JFLEdBQU1tQyxLQUFLLFNBQUNtQyxHQUFpQixJQUM1QzVCLEVBQWtCNEIsRUFBbEI1QixHQUFJNkIsRUFBY0QsRUFBZEMsV0FDVEMsRUFBY0wsRUFBS25FLEtBQUt1QyxVQUFXaUMsR0FBZTlCLEdBQUlBLEdBQUs2QixJQUczREosRUFBS25FLEtBQUsyQyxlQUFlOEIsUUFBUSxTQUFDakIsR0FDaEMsSUFBSWtCLEVBQU9uRSxHQUFHbEMsT0FBT3NHLGtCQUFrQixPQUFRbkIsRUFBY2QsSUFDN0RnQyxFQUFLRSxJQUFJLFlBQWFyQyxHQUN0Qm1DLEVBQUtMLFlBSVh0QixPQXZCVSxTQXVCSC9DLEdBQUssSUFBQTZFLEVBQUE1RSxLQUNOc0MsRUFBWWhDLEdBQUdsQyxPQUFPc0csa0JBQWtCLFlBQWExRSxLQUFLRCxLQUFLdUMsVUFBVUcsSUFRN0UsT0FQQUgsRUFBVXFDLElBQUksT0FBUTVFLEVBQUs5QixNQUMzQnFFLEVBQVVxQyxJQUFJLFFBQVM1RSxFQUFLd0MsT0FDNUJELEVBQVVxQyxJQUFJLFFBQVM1RSxFQUFLeUMsT0FHNUJ4QyxLQUFLNkUsZ0JBQWdCN0UsS0FBS0QsS0FBS3VDLFVBQVVHLElBRWxDSCxFQUFVOEIsT0FBT2xDLEtBQUssU0FBQ21DLEdBQzVCRSxFQUFjSyxFQUFLN0UsS0FBS3VDLFVBQVdpQyxHQUFlOUIsR0FBSTRCLEVBQWE1QixJQUFLNEIsRUFBYUMsYUFFckZNLEVBQUs3RSxLQUFLMkMsZUFBZThCLFFBQVEsU0FBQ2pCLEdBQ2hDLElBQUlrQixFQUFPbkUsR0FBR2xDLE9BQU9zRyxrQkFBa0IsT0FBUW5CLEVBQWNkLElBQzdEZ0MsRUFBS0UsSUFBSSxZQUFhckMsR0FDdEJtQyxFQUFLTCxZQUlYbkIsT0ExQ1UsU0EwQ0hsRCxHQUFLLElBQUErRSxFQUFBOUUsS0FFVixPQURnQk0sR0FBR2xDLE9BQU9zRyxrQkFBa0IsWUFBYTNFLEVBQUt1QyxVQUFVRyxJQUN2RHNDLFVBQVU3QyxLQUFLLFNBQUM4QyxHQUUvQixPQURBRixFQUFLL0UsTUFBUXVDLFdBQVdyRSxLQUFLLEdBQUdzRSxNQUFNLEdBQUdDLE1BQU0sR0FBR0MsR0FBRyxJQUFLQyxtQkFDbkRzQyxFQUFRdkMsTUFHbkJvQyxnQkFqRFUsU0FpRE1JLEdBQ2QsSUFBSTNDLEVBQVloQyxHQUFHbEMsT0FBT3NHLGtCQUFrQixZQUFhTyxHQUNyREMsRUFBUSxJQUFJNUUsR0FBRzZFLE1BQU0sUUFDekJELEVBQU1FLFFBQVEsWUFBYTlDLEdBQzNCNEMsRUFBTWxELE9BQU9FLEtBQUssU0FBQ21ELEdBQ2pCQSxFQUFNcEYsSUFBSSxTQUFDd0UsR0FDTEEsRUFBT25FLEdBQUdsQyxPQUFPc0csa0JBQWtCLE9BQVFELEVBQUtoQyxJQUFwRCxJQUNJNkMsRUFBYWhGLEdBQUdsQyxPQUFPc0csa0JBQWtCLFlBQWEsNEJBRTFELE9BREFELEVBQUtFLElBQUksWUFBYVcsR0FDZmIsRUFBS0wsa1JDekhQLGFBc0RYN0QsS0FEZSxTQUNWVSxFQUFNQyxHQUNUbEIsS0FBS2lCLEtBQU9BLEVBQ1pqQixLQUFLa0IsTUFBUUEsRUFDYmxCLEtBQUttQixhQUNMbkIsS0FBS29CLGVBQ0xwQixLQUFLdUYsZUFFUEEsWUFSZSxXQVFGLElBQUFYLEVBQUE1RSxLQUNYLE9BQU9BLEtBQUtrQixNQUFNc0UsUUFBUXRELEtBQUssV0FDN0IwQyxFQUFLM0QsS0FBS1csT0FBT2dELEVBQUsxRCxNQUFNbkIsU0FHaENvQixXQWJlLFdBYUgsSUFBQTJELEVBQUE5RSxLQUNWcUIsRUFBRXJCLEtBQUtpQixLQUFLSyxJQUFJbEIsR0FBRyxRQUFTLEtBQU0sU0FBQytDLEdBQ2pDLElBQUlzQyxFQUFTcEUsRUFBRThCLEVBQUVDLGVBQWVDLEtBQUssZ0JBRXJDLEdBRGVoQyxFQUFFOEIsRUFBRUMsZUFBZXNDLFNBQVMsVUFPekNaLEVBQUs1RCxNQUFNbkIsS0FBSzJDLGVBQWlCb0MsRUFBSzVELE1BQU1uQixLQUFLMkMsZUFBZVksT0FBTyxTQUFDQyxHQUV0RSxPQUFPQSxFQUFjZCxLQUFPZ0QsUUFSbkIsQ0FDWCxJQUFJRSxFQUFXYixFQUFLNUQsTUFBTW5CLEtBQUtzRixNQUFNckQsS0FBSyxTQUFDeUMsR0FDekMsT0FBT0EsRUFBS2hDLEtBQU9nRCxJQUNsQnhILEtBQ0g2RyxFQUFLNUQsTUFBTW5CLEtBQUsyQyxlQUFlckMsTUFBTW9DLEdBQUlnRCxFQUFReEgsS0FBTTBILElBUXpEYixFQUFLN0QsS0FBS1csT0FBT2tELEVBQUs1RCxNQUFNbkIsTUFDNUIsSUFBSVgsRUFBUytDLEtBQUtDLE1BQU1ELEtBQUtFLFVBQVV5QyxFQUFLNUQsTUFBTW5CLE9BQ2xETCxPQUFPQyxTQUFTRSxLQUFLLFVBQVdULE1BR3BDZ0MsYUFsQ2UsV0FrQ0QsSUFBQVUsRUFBQTlCLEtBQ1pOLE9BQU9DLFNBQVNTLEdBQUcsYUFBYyxTQUFDTCxHQUNoQytCLEVBQUtaLE1BQU1uQixLQUFLMkMsZUFBa0IzQyxFQUFLMkMsZUFDdkNaLEVBQUtiLEtBQUtXLE9BQU9FLEVBQUtaLE1BQU1uQixRQUU5QkwsT0FBT0MsU0FBU1MsR0FBRyxrQkFBbUIsU0FBQ0wsR0FDckMrQixFQUFLWixNQUFNbkIsS0FBSzJDLGVBQWlCM0MsRUFBSzJDLGVBQ3RDWixFQUFLYixLQUFLVyxPQUFPRSxFQUFLWixNQUFNbkIsUUFFOUJMLE9BQU9DLFNBQVNTLEdBQUcsc0JBQXVCLFNBQUNMLEdBQ3pDK0IsRUFBS1osTUFBTW5CLEtBQUsyQyxlQUFpQjNDLEVBQUsyQyxlQUN0Q1osRUFBS2IsS0FBS1csT0FBT0UsRUFBS1osTUFBTW5CLFdBS3ZCUSxNQXJHVGUsR0FBSSxZQUNKb0MsOGVBZ0JBOUIsT0FsQlMsU0FrQkY3QixHQUFLLElBQUF3QixFQUFBdkIsS0FDVnFCLEVBQUVyQixLQUFLc0IsSUFBSTBDLFFBREQsSUFFTHFCLEVBQXlCdEYsRUFBekJzRixNQUFPM0MsRUFBa0IzQyxFQUFsQjJDLGVBQ1oyQyxFQUFNcEYsSUFBSSxTQUFDd0UsR0FLVCxJQUpBLElBQUltQixFQUFNdkUsRUFDUkUsRUFBS21DLFNBQVNJLFFBQVEsWUFBYVcsRUFBS3hHLE1BQ3ZDNkYsUUFBUSxjQUFlVyxFQUFLb0IsU0FDN0J4QyxLQUFLLGVBQWdCb0IsRUFBS2hDLElBQ3BCL0UsRUFBSSxFQUFHQSxFQUFJZ0YsRUFBZWtCLE9BQVFsRyxJQUN4QyxHQUFHZ0YsRUFBZWhGLEdBQUcrRSxLQUFPZ0MsRUFBS2hDLEdBQUcsQ0FDbENtRCxFQUFJbEUsU0FBUyxVQUNiLE1BR0pMLEVBQUVFLEVBQUtELElBQUkyQyxPQUFPMkIsUUFNdEI3RixNQUNFc0YsU0FDQTNDLG1CQUVGOEMsTUFMVSxXQUtILElBQUF0QixFQUFBbEUsS0FFTCxPQURZLElBQUlNLEdBQUc2RSxNQUFNLFFBQ1puRCxPQUFPRSxLQUFLLFNBQUNtRCxHQUN4Qm5CLEVBQUtuRSxLQUFLc0YsTUFBUUEsRUFBTXBGLElBQUksU0FBQ3dFLEdBQzNCLE9BQU9GLEdBQWU5QixHQUFJZ0MsRUFBS2hDLElBQUtnQyxFQUFLSCx1UkMvQ3BDLGFBeURYL0QsS0FEZSxTQUNWVSxFQUFNQyxHQUNUbEIsS0FBS2lCLEtBQU9BLEVBQ1pqQixLQUFLa0IsTUFBUUEsRUFDYmxCLEtBQUttQixhQUNMbkIsS0FBS29CLGVBQ0xwQixLQUFLOEYsb0JBRVBBLGlCQVJlLFdBUUcsSUFBQWhCLEVBQUE5RSxLQUNoQixPQUFPQSxLQUFLa0IsTUFBTXNFLFFBQVF0RCxLQUFLLFdBQzdCNEMsRUFBSzdELEtBQUtXLE9BQU9rRCxFQUFLNUQsTUFBTW5CLFNBR2hDb0IsV0FiZSxXQWFILElBQUFXLEVBQUE5QixLQUNWcUIsRUFBRXJCLEtBQUtpQixLQUFLSyxJQUFJbEIsR0FBRyxRQUFTLEtBQU0sU0FBQytDLEdBQ2pDLElBQUk4QixFQUFjNUQsRUFBRThCLEVBQUVDLGVBQWVDLEtBQUsscUJBQzFDdkIsRUFBS1osTUFBTW5CLEtBQUtnRyxrQkFBb0JkLEVBQ3BDbkQsRUFBS2IsS0FBS1csT0FBT0UsRUFBS1osTUFBTW5CLE1BQzVCK0IsRUFBS1osTUFBTThFLG1CQUFtQmxFLEVBQUtaLE1BQU1uQixLQUFLZ0csbUJBQW1CN0QsS0FBSyxXQUNwRSxJQUFJbkMsS0FDSkEsRUFBQSxlQUF5QitCLEVBQUtaLE1BQU1uQixLQUFLa0cscUJBRXpDLElBREEsSUFBSUMsRUFBYXBFLEVBQUtaLE1BQU1uQixLQUFLbUcsV0FDekJ4SSxFQUFJLEVBQUdBLEVBQUl3SSxFQUFXdEMsT0FBUWxHLElBQ3BDLEdBQUd3SSxFQUFXeEksR0FBRytFLEtBQU93QyxFQUFZLENBQ2xDbEYsRUFBQSxVQUFvQm1HLEVBQVd4SSxHQUMvQixNQUdKLElBQUkwQixFQUFTK0MsS0FBS0MsTUFBTUQsS0FBS0UsVUFBVXRDLElBQ3ZDTCxPQUFPQyxTQUFTRSxLQUFLLGtCQUFtQlQsUUFJOUNnQyxhQWpDZSxXQWlDRCxJQUFBeUIsRUFBQTdDLEtBQ1pOLE9BQU9DLFNBQVNTLEdBQUcsd0JBQXlCLFNBQUNMLEdBQzNDOEMsRUFBSzNCLE1BQU1uQixLQUFLbUcsV0FBVzdGLEtBQUtOLEVBQUt1QyxXQUNyQ08sRUFBSzVCLEtBQUtXLE9BQU9pQixFQUFLM0IsTUFBTW5CLFFBRTlCTCxPQUFPQyxTQUFTUyxHQUFHLGtCQUFtQixTQUFDTCxHQUNyQzhDLEVBQUszQixNQUFNbkIsS0FBS21HLFdBQWFyRCxFQUFLM0IsTUFBTW5CLEtBQUttRyxXQUFXNUMsT0FBTyxTQUFDaEIsR0FDOUQsT0FBT0EsRUFBVUcsS0FBTzFDLEVBQUswQyxLQUUvQkksRUFBSzNCLE1BQU1uQixLQUFLZ0csdUJBQW9CNUYsRUFDcEMwQyxFQUFLNUIsS0FBS1csT0FBT2lCLEVBQUszQixNQUFNbkIsUUFFOUJMLE9BQU9DLFNBQVNTLEdBQUcsZUFBZ0IsV0FDakN5QyxFQUFLNUIsS0FBS2tGLGNBQ1Z0RCxFQUFLM0IsTUFBTW5CLEtBQUtrRyx3QkFDaEJwRCxFQUFLM0IsTUFBTW5CLEtBQUtnRyx1QkFBb0I1RixJQUV0Q1QsT0FBT0MsU0FBU1MsR0FBRyxrQkFBbUIsU0FBQ0wsR0FFckMsSUFEQSxJQUFJbUcsRUFBYXJELEVBQUszQixNQUFNbkIsS0FBS21HLFdBQ3pCeEksRUFBSSxFQUFHQSxFQUFJd0ksRUFBV3RDLE9BQVFsRyxJQUNqQ3dJLEVBQVd4SSxHQUFHK0UsS0FBTzFDLEVBQUt1QyxVQUFVRyxLQUNyQ3lELEVBQVd4SSxHQUFLcUMsRUFBS3VDLFdBR3pCTyxFQUFLNUIsS0FBS1csT0FBT2lCLEVBQUszQixNQUFNbkIsV0FLdkJRLE1BcEhUZSxHQUFJLGlCQUNKb0Msb09BUUE5QixPQVZTLFNBVUY3QixHQUFLLElBQUF3QixFQUFBdkIsS0FDVnFCLEVBQUVyQixLQUFLc0IsSUFBSTBDLFFBREQsSUFFTGtDLEVBQWlDbkcsRUFBakNtRyxXQUFZSCxFQUFxQmhHLEVBQXJCZ0csa0JBQ2pCRyxFQUFXakcsSUFBSSxTQUFDcUMsR0FDZCxJQUFJc0QsRUFBTXZFLEVBQ1JFLEVBQUttQyxTQUFTSSxRQUFRLFlBQWF4QixFQUFVckUsTUFBTSxTQUNuRG9GLEtBQUssb0JBQXFCZixFQUFVRyxJQUNuQ0gsRUFBVUcsS0FBT3NELEdBQ2xCSCxFQUFJbEUsU0FBUyxVQUVmTCxFQUFFRSxFQUFLRCxJQUFJMkMsT0FBTzJCLE1BR3RCTyxZQXZCUyxXQXdCUDlFLEVBQUVyQixLQUFLc0IsSUFBSVUsS0FBSyxXQUFXTCxZQUFZLGFBTXpDNUIsTUFDRW1HLGNBQ0FILHVCQUFtQjVGLEVBQ25COEYseUJBRUZULE1BTlUsV0FNSCxJQUFBdEIsRUFBQWxFLEtBRUwsT0FEWSxJQUFJTSxHQUFHNkUsTUFBTSxhQUNabkQsT0FBT0UsS0FBSyxTQUFDZ0UsR0FDeEJoQyxFQUFLbkUsS0FBS21HLFdBQWFBLEVBQVdqRyxJQUFJLFNBQUNxQyxHQUNyQyxPQUFPaUMsR0FBZTlCLEdBQUlILEVBQVVHLElBQUtILEVBQVVnQyxpQkFJekQwQixtQkFkVSxTQWNTZixHQUFZLElBQUFMLEVBQUE1RSxLQUN6QnNDLEVBQVloQyxHQUFHbEMsT0FBT3NHLGtCQUFrQixZQUFhTyxHQUNyREMsRUFBUSxJQUFJNUUsR0FBRzZFLE1BQU0sUUFFekIsT0FEQUQsRUFBTUUsUUFBUSxZQUFhOUMsR0FDcEI0QyxFQUFNbEQsT0FBT0UsS0FBSyxTQUFDbUQsR0FDeEJULEVBQUs3RSxLQUFLa0cscUJBQXVCWixFQUFNcEYsSUFBSSxTQUFDd0UsR0FDMUMsT0FBT0YsR0FBZTlCLEdBQUlnQyxFQUFLaEMsSUFBS2dDLEVBQUtIIiwiZmlsZSI6ImpzL3NvbmdTaGVldEFkbWluLWJ1bmRsZS5qcyIsInNvdXJjZXNDb250ZW50IjpbIiBcdC8vIFRoZSBtb2R1bGUgY2FjaGVcbiBcdHZhciBpbnN0YWxsZWRNb2R1bGVzID0ge307XG5cbiBcdC8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG4gXHRmdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cbiBcdFx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG4gXHRcdGlmKGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdKSB7XG4gXHRcdFx0cmV0dXJuIGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdLmV4cG9ydHM7XG4gXHRcdH1cbiBcdFx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcbiBcdFx0dmFyIG1vZHVsZSA9IGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdID0ge1xuIFx0XHRcdGk6IG1vZHVsZUlkLFxuIFx0XHRcdGw6IGZhbHNlLFxuIFx0XHRcdGV4cG9ydHM6IHt9XG4gXHRcdH07XG5cbiBcdFx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG4gXHRcdG1vZHVsZXNbbW9kdWxlSWRdLmNhbGwobW9kdWxlLmV4cG9ydHMsIG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG4gXHRcdC8vIEZsYWcgdGhlIG1vZHVsZSBhcyBsb2FkZWRcbiBcdFx0bW9kdWxlLmwgPSB0cnVlO1xuXG4gXHRcdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG4gXHRcdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbiBcdH1cblxuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZXMgb2JqZWN0IChfX3dlYnBhY2tfbW9kdWxlc19fKVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5tID0gbW9kdWxlcztcblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGUgY2FjaGVcbiBcdF9fd2VicGFja19yZXF1aXJlX18uYyA9IGluc3RhbGxlZE1vZHVsZXM7XG5cbiBcdC8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb24gZm9yIGhhcm1vbnkgZXhwb3J0c1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kID0gZnVuY3Rpb24oZXhwb3J0cywgbmFtZSwgZ2V0dGVyKSB7XG4gXHRcdGlmKCFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywgbmFtZSkpIHtcbiBcdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgbmFtZSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGdldHRlciB9KTtcbiBcdFx0fVxuIFx0fTtcblxuIFx0Ly8gZGVmaW5lIF9fZXNNb2R1bGUgb24gZXhwb3J0c1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5yID0gZnVuY3Rpb24oZXhwb3J0cykge1xuIFx0XHRpZih0eXBlb2YgU3ltYm9sICE9PSAndW5kZWZpbmVkJyAmJiBTeW1ib2wudG9TdHJpbmdUYWcpIHtcbiBcdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgU3ltYm9sLnRvU3RyaW5nVGFnLCB7IHZhbHVlOiAnTW9kdWxlJyB9KTtcbiBcdFx0fVxuIFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuIFx0fTtcblxuIFx0Ly8gY3JlYXRlIGEgZmFrZSBuYW1lc3BhY2Ugb2JqZWN0XG4gXHQvLyBtb2RlICYgMTogdmFsdWUgaXMgYSBtb2R1bGUgaWQsIHJlcXVpcmUgaXRcbiBcdC8vIG1vZGUgJiAyOiBtZXJnZSBhbGwgcHJvcGVydGllcyBvZiB2YWx1ZSBpbnRvIHRoZSBuc1xuIFx0Ly8gbW9kZSAmIDQ6IHJldHVybiB2YWx1ZSB3aGVuIGFscmVhZHkgbnMgb2JqZWN0XG4gXHQvLyBtb2RlICYgOHwxOiBiZWhhdmUgbGlrZSByZXF1aXJlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnQgPSBmdW5jdGlvbih2YWx1ZSwgbW9kZSkge1xuIFx0XHRpZihtb2RlICYgMSkgdmFsdWUgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKHZhbHVlKTtcbiBcdFx0aWYobW9kZSAmIDgpIHJldHVybiB2YWx1ZTtcbiBcdFx0aWYoKG1vZGUgJiA0KSAmJiB0eXBlb2YgdmFsdWUgPT09ICdvYmplY3QnICYmIHZhbHVlICYmIHZhbHVlLl9fZXNNb2R1bGUpIHJldHVybiB2YWx1ZTtcbiBcdFx0dmFyIG5zID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcbiBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5yKG5zKTtcbiBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KG5zLCAnZGVmYXVsdCcsIHsgZW51bWVyYWJsZTogdHJ1ZSwgdmFsdWU6IHZhbHVlIH0pO1xuIFx0XHRpZihtb2RlICYgMiAmJiB0eXBlb2YgdmFsdWUgIT0gJ3N0cmluZycpIGZvcih2YXIga2V5IGluIHZhbHVlKSBfX3dlYnBhY2tfcmVxdWlyZV9fLmQobnMsIGtleSwgZnVuY3Rpb24oa2V5KSB7IHJldHVybiB2YWx1ZVtrZXldOyB9LmJpbmQobnVsbCwga2V5KSk7XG4gXHRcdHJldHVybiBucztcbiBcdH07XG5cbiBcdC8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSBmdW5jdGlvbihtb2R1bGUpIHtcbiBcdFx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0RGVmYXVsdCgpIHsgcmV0dXJuIG1vZHVsZVsnZGVmYXVsdCddOyB9IDpcbiBcdFx0XHRmdW5jdGlvbiBnZXRNb2R1bGVFeHBvcnRzKCkgeyByZXR1cm4gbW9kdWxlOyB9O1xuIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCAnYScsIGdldHRlcik7XG4gXHRcdHJldHVybiBnZXR0ZXI7XG4gXHR9O1xuXG4gXHQvLyBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGxcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubyA9IGZ1bmN0aW9uKG9iamVjdCwgcHJvcGVydHkpIHsgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmplY3QsIHByb3BlcnR5KTsgfTtcblxuIFx0Ly8gX193ZWJwYWNrX3B1YmxpY19wYXRoX19cbiBcdF9fd2VicGFja19yZXF1aXJlX18ucCA9IFwiXCI7XG5cblxuIFx0Ly8gTG9hZCBlbnRyeSBtb2R1bGUgYW5kIHJldHVybiBleHBvcnRzXG4gXHRyZXR1cm4gX193ZWJwYWNrX3JlcXVpcmVfXyhfX3dlYnBhY2tfcmVxdWlyZV9fLnMgPSAxMCk7XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpe1xyXG4gIC8vIOS6i+S7tuS4reW/gywg5Y+R5biD6K6i6ZiF5qih5byPXHJcbiAgd2luZG93LmV2ZW50SHViID0ge1xyXG4gICAgZXZlbnRzOiB7XHJcbiAgICAgIC8vIGV2ZW50MTogW2ZuMSwgZm4yLCAuLi5dXHJcbiAgICAgIC8vIGV2ZW50MjogW2ZuQSwgZm5CLCAuLi5dXHJcbiAgICAgIC8vIC4uLlxyXG4gICAgfSxcclxuICAgIGVtaXQoZXZlbnROYW1lLCBkYXRhKXsvL+WPkeW4gyjop6blj5Hkuovku7bvvIzpnIDopoHlj5HpgIHmlbDmja7ogIXpnIDopoHosIPnlKjlj5HluIMp77yM5om+5Yiw6YKj5Liq5qG277yM5oqK6YeM6Z2i55qE5Ye95pWw5YWo6YO9Y2FsbOS4gOmBje+8jGNhbGznmoTml7blgJnluKbkuKpkYXRhXHJcbiAgICAgIGZvcihsZXQga2V5IGluIHRoaXMuZXZlbnRzKXtcclxuICAgICAgICBpZihrZXkgPT09IGV2ZW50TmFtZSl7XHJcbiAgICAgICAgICB0aGlzLmV2ZW50c1trZXldLm1hcCgoZm4pID0+IHtcclxuICAgICAgICAgICAgZm4uY2FsbCh1bmRlZmluZWQsIGRhdGEpXHJcbiAgICAgICAgICB9KVxyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfSxcclxuICAgIG9uKGV2ZW50TmFtZSwgZm4pey8v6K6i6ZiFKOaOpeaUtuS6i+S7tu+8jOaOpeaUtuaVsOaNruiAhemcgOimgeiwg+eUqOiuoumYhSks5oqK5L2g55qE5Ye95pWw5pS+5Yiw5LiA5Liq5qG26YeM6Z2iXHJcbiAgICAgIGlmKHRoaXMuZXZlbnRzW2V2ZW50TmFtZV0gPT09IHVuZGVmaW5lZCl7XHJcbiAgICAgICAgdGhpcy5ldmVudHNbZXZlbnROYW1lXSA9IFtdXHJcbiAgICAgIH1cclxuICAgICAgdGhpcy5ldmVudHNbZXZlbnROYW1lXS5wdXNoKGZuKVxyXG4gICAgfSxcclxuICB9XHJcbn0iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpe1xyXG4gIGxldCBBUFBfSUQgPSAnSWJLSE5sUkdSQUZqWW1tekMxZ3hodGRFLWd6R3pvSHN6JztcclxuICBsZXQgQVBQX0tFWSA9ICc2U2xRUHFDY3k4S3dIVkVoSnBGZUJGcEcnO1xyXG4gIEFWLmluaXQoe1xyXG4gICAgYXBwSWQ6IEFQUF9JRCxcclxuICAgIGFwcEtleTogQVBQX0tFWVxyXG4gIH0pO1xyXG59IiwiaW1wb3J0ICcuLi8uLi9jc3Mvc29uZ1NoZWV0QWRtaW4uY3NzJ1xuXG5pbXBvcnQgYXYgZnJvbSAnLi4vY29tbW9uL2F2J1xuaW1wb3J0IGV2ZW50SHViIGZyb20gJy4uL2NvbW1vbi9ldmVudC1odWInXG5pbXBvcnQgc29uZ1NoZWV0TGlzdCBmcm9tICcuL3NvbmdTaGVldExpc3QnXG5pbXBvcnQgc29uZ0xpc3QgZnJvbSAnLi9zb25nTGlzdCdcbmltcG9ydCBlZGl0U29uZ1NoZWV0IGZyb20gJy4vZWRpdFNvbmdTaGVldCdcbmltcG9ydCBuZXdTb25nU2hlZXQgZnJvbSAnLi9uZXdTb25nU2hlZXQnXG5cbmF2KClcbmV2ZW50SHViKClcbnNvbmdTaGVldExpc3QoKVxuc29uZ0xpc3QoKVxuZWRpdFNvbmdTaGVldCgpXG5uZXdTb25nU2hlZXQoKSIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCl7XG4gIGxldCB2aWV3ID0ge1xuICAgIGVsOiAnLm5ld1NvbmdTaGVldCcsXG4gICAgYWN0aXZlKCl7XG4gICAgICAkKHRoaXMuZWwpLmFkZENsYXNzKCdhY3RpdmUnKVxuICAgIH0sXG4gICAgZGVBY3RpdmUoKXtcbiAgICAgICQodGhpcy5lbCkucmVtb3ZlQ2xhc3MoJ2FjdGl2ZScpXG4gICAgfVxuXG4gIH1cblxuICBsZXQgbW9kZWwgPSB7XG4gIH1cblxuICBsZXQgY29udHJvbGxlciA9IHtcbiAgICBpbml0KHZpZXcsIG1vZGVsKXtcbiAgICAgIHRoaXMudmlldyA9IHZpZXdcbiAgICAgIHRoaXMubW9kZWwgPSBtb2RlbFxuICAgICAgdGhpcy5iaW5kRXZlbnRzKClcbiAgICAgIHRoaXMuYmluZEV2ZW50SHViKClcbiAgICB9LFxuICAgIGJpbmRFdmVudHMoKXtcbiAgICAgICQodGhpcy52aWV3LmVsKS5vbignY2xpY2snLCAoKT0+e1xuICAgICAgICB3aW5kb3cuZXZlbnRIdWIuZW1pdCgnbmV3U29uZ1NoZWV0JylcbiAgICAgIH0pXG4gICAgfSxcbiAgICBiaW5kRXZlbnRIdWIoKXtcbiAgICAgIHdpbmRvdy5ldmVudEh1Yi5vbignc2VsZWN0U29uZ1NoZWV0JywgKCk9PntcbiAgICAgICAgdGhpcy52aWV3LmRlQWN0aXZlKClcbiAgICAgIH0pXG4gICAgICB3aW5kb3cuZXZlbnRIdWIub24oJ25ld1NvbmdTaGVldCcsICgpPT57XG4gICAgICAgIHRoaXMudmlldy5hY3RpdmUoKVxuICAgICAgfSlcbiAgICAgIHdpbmRvdy5ldmVudEh1Yi5vbignY3JlYXRTb25nU2hlZXRTdWNjZXNzJywgKCkgPT4ge1xuICAgICAgICB0aGlzLnZpZXcuYWN0aXZlKClcbiAgICAgIH0pXG4gICAgICB3aW5kb3cuZXZlbnRIdWIub24oJ2RlbGV0ZVNvbmdTaGVldCcsICgpID0+IHtcbiAgICAgICAgdGhpcy52aWV3LmFjdGl2ZSgpXG4gICAgICB9KVxuICAgIH1cbiAgfVxuICBjb250cm9sbGVyLmluaXQodmlldywgbW9kZWwpXG59IiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oKXtcbiAgbGV0IHZpZXcgPSB7XG4gICAgZWw6IFwiLmVkaXRBcmVhLXdyYXBwZXJcIixcbiAgICB0ZW1wbGF0ZTogYFxuICAgICAgPGRpdiBjbGFzcz1cImVkaXRBcmVhXCI+XG4gICAgICAgIDxoMT7mlrDlu7rmrYzljZU8L2gxPlxuICAgICAgICA8ZGl2IGNsYXNzPVwicm93XCI+XG4gICAgICAgICAgPGxhYmVsPuatjOWNleWQjeensDwvbGFiZWw+XG4gICAgICAgICAgPGlucHV0IHR5cGU9XCJ0ZXh0XCIgbmFtZT1cIm5hbWVcIiB2YWx1ZT1cIl9fbmFtZV9fXCI+XG4gICAgICAgIDwvZGl2PlxuICAgICAgICA8ZGl2IGNsYXNzPVwicm93XCI+XG4gICAgICAgICAgPGxhYmVsPuatjOWNleeugOS7izwvbGFiZWw+XG4gICAgICAgICAgPHRleHRhcmVhIG5hbWU9XCJicmllZlwiPl9fYnJpZWZfXzwvdGV4dGFyZWE+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJyb3dcIj5cbiAgICAgICAgICA8bGFiZWw+5bCB6Z2i5aSW6ZO+PC9sYWJlbD5cbiAgICAgICAgICA8aW5wdXQgdHlwZT1cInRleHRcIiBuYW1lPVwiY292ZXJcIiB2YWx1ZT1cIl9fY292ZXJfX1wiPlxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgPGRpdiBjbGFzcz1cInJvd1wiPlxuICAgICAgICAgICAgPGxhYmVsPuWMheWQq+atjOabsjwvbGFiZWw+XG4gICAgICAgICAgICA8b2wgY2xhc3M9XCJzb25nTGlzdC1ib3hcIj48L29sPlxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgPGRpdiBjbGFzcz1cImJ1dHRvbi13cmFwcGVyXCI+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiYnV0dG9uIGRlbGV0ZVwiPuWIoCZuYnNwOyZuYnNwO+mZpDwvZGl2PlxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImJ1dHRvbiBjb25maXJtXCI+56GuJm5ic3A7Jm5ic3A75a6aPC9kaXY+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+XG4gICAgYCxcbiAgICByZXNldCgpe1xuICAgICAgdGhpcy5yZW5kZXIoKVxuICAgICAgdGhpcy5yZW5kZXJTb25nTGlzdEJveCgpXG4gICAgfSxcbiAgICByZW5kZXIoZGF0YSA9IHtzb25nU2hlZXQ6e25hbWU6JycsY292ZXI6JycsYnJpZWY6JycsaWQ6Jyd9LCBzb25nU2hlZXRTb25nczpbXX0pe1xuICAgICAgbGV0IHBsYWNlaG9sZGVycyA9IFsnbmFtZScsICdicmllZicsICdjb3ZlciddXG4gICAgICBsZXQgaHRtbCA9IGRhdGEuc29uZ1NoZWV0LmlkID8gdGhpcy50ZW1wbGF0ZS5yZXBsYWNlKCfmlrDlu7rmrYzljZUnLCfnvJbovpHmrYzljZUnKSA6IHRoaXMudGVtcGxhdGVcbiAgICAgIFxuICAgICAgcGxhY2Vob2xkZXJzLm1hcCgocGxhY2Vob2xkZXIpID0+IHtcbiAgICAgICAgaHRtbCA9IGh0bWwucmVwbGFjZShgX18ke3BsYWNlaG9sZGVyfV9fYCwgZGF0YS5zb25nU2hlZXRbcGxhY2Vob2xkZXJdIHx8ICcnKS8vZGF0YVtwbGFjZWhvbGRlcl3kuLp1bmRlZmluZWTnmoTor53lsLHmjaLmiJAnJ1xuICAgICAgfSlcbiAgICAgICQodGhpcy5lbCkuaHRtbChodG1sKVxuICAgIH0sXG4gICAgcmVuZGVyU29uZ0xpc3RCb3goZGF0YSA9IHtzb25nU2hlZXQ6e25hbWU6JycsY292ZXI6JycsYnJpZWY6JycsaWQ6Jyd9LCBzb25nU2hlZXRTb25nczpbXX0pe1xuICAgICAgJCh0aGlzLmVsKS5maW5kKCcuc29uZ0xpc3QtYm94JykuZW1wdHkoKVxuICAgICAgaWYoZGF0YS5zb25nU2hlZXRTb25ncy5sZW5ndGgpe1xuICAgICAgICBkYXRhLnNvbmdTaGVldFNvbmdzLm1hcCgoc29uZ1NoZWV0U29uZykgPT4ge1xuICAgICAgICAgICQodGhpcy5lbCkuZmluZCgnLnNvbmdMaXN0LWJveCcpLmFwcGVuZChcbiAgICAgICAgICAgICQoYFxuICAgICAgICAgICAgICAgIDxsaSBjbGFzcz1cInNvbmdcIj5cbiAgICAgICAgICAgICAgICAgIF9fc29uZ05hbWVfX1xuICAgICAgICAgICAgICAgICAgPHN2ZyBjbGFzcz1cImljb24gaWNvbi1kZWxldGUxXCIgYXJpYS1oaWRkZW49XCJ0cnVlXCI+XG4gICAgICAgICAgICAgICAgICAgIDx1c2UgeGxpbms6aHJlZj1cIiNpY29uLWRlbGV0ZTFcIj48L3VzZT5cbiAgICAgICAgICAgICAgICAgIDwvc3ZnPlxuICAgICAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICAgIGAucmVwbGFjZSgnX19zb25nTmFtZV9fJywgc29uZ1NoZWV0U29uZy5uYW1lKVxuICAgICAgICAgICAgKS5hdHRyKCdkYXRhLXNvbmctaWQnLCBzb25nU2hlZXRTb25nLmlkKVxuICAgICAgICAgIClcbiAgICAgICAgfSlcbiAgICAgIH1lbHNle1xuICAgICAgICAkKHRoaXMuZWwpLmZpbmQoJy5zb25nTGlzdC1ib3gnKS5hcHBlbmQoJCgnPHAgY2xhc3M9XCJwcm9tcHRcIj7or7fpgInlj5blj7PliJfnmoTmrYzmm7LliqDlhaXmnKzmrYzljZU8L3A+JykpXG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgbGV0IG1vZGVsID0ge1xuICAgIGRhdGE6IHtcbiAgICAgIHNvbmdTaGVldDoge1xuICAgICAgICBuYW1lOicnLCBjb3ZlcjonJywgYnJpZWY6JycsIGlkOicnXG4gICAgICB9LFxuICAgICAgc29uZ1NoZWV0U29uZ3M6IFtdXG4gICAgfSxcbiAgICBjcmVhdGUoZGF0YSl7XG4gICAgICB2YXIgU29uZ1NoZWV0ID0gQVYuT2JqZWN0LmV4dGVuZCgnU29uZ1NoZWV0Jyk7XG4gICAgICB2YXIgc29uZ1NoZWV0ID0gbmV3IFNvbmdTaGVldCgpXG5cbiAgICAgIHJldHVybiBzb25nU2hlZXQuc2F2ZShkYXRhKS50aGVuKChuZXdTb25nU2hlZXQpID0+IHtcbiAgICAgICAgbGV0IHtpZCwgYXR0cmlidXRlc30gPSBuZXdTb25nU2hlZXRcbiAgICAgICAgT2JqZWN0LmFzc2lnbih0aGlzLmRhdGEuc29uZ1NoZWV0LCBPYmplY3QuYXNzaWduKHtpZDogaWR9LCBhdHRyaWJ1dGVzKSlcblxuICAgICAgICAvL+iuvue9ruWFs+iBlFxuICAgICAgICB0aGlzLmRhdGEuc29uZ1NoZWV0U29uZ3MuZm9yRWFjaCgoc29uZ1NoZWV0U29uZyk9PntcbiAgICAgICAgICB2YXIgc29uZyA9IEFWLk9iamVjdC5jcmVhdGVXaXRob3V0RGF0YSgnU29uZycsIHNvbmdTaGVldFNvbmcuaWQpXG4gICAgICAgICAgc29uZy5zZXQoJ2RlcGVuZGVudCcsIHNvbmdTaGVldClcbiAgICAgICAgICBzb25nLnNhdmUoKVxuICAgICAgICB9KVxuICAgICAgfSlcbiAgICB9LFxuICAgIHVwZGF0ZShkYXRhKXtcbiAgICAgIHZhciBzb25nU2hlZXQgPSBBVi5PYmplY3QuY3JlYXRlV2l0aG91dERhdGEoJ1NvbmdTaGVldCcsIHRoaXMuZGF0YS5zb25nU2hlZXQuaWQpO1xuICAgICAgc29uZ1NoZWV0LnNldCgnbmFtZScsIGRhdGEubmFtZSk7XG4gICAgICBzb25nU2hlZXQuc2V0KCdjb3ZlcicsIGRhdGEuY292ZXIpO1xuICAgICAgc29uZ1NoZWV0LnNldCgnYnJpZWYnLCBkYXRhLmJyaWVmKTtcblxuICAgICAgLy/lhYjop6PpmaTkuYvliY3nmoTkvp3otZZcbiAgICAgIHRoaXMucmVtb3ZlRGVwZW5kZW50KHRoaXMuZGF0YS5zb25nU2hlZXQuaWQpXG5cbiAgICAgIHJldHVybiBzb25nU2hlZXQuc2F2ZSgpLnRoZW4oKG5ld1NvbmdTaGVldCkgPT4ge1xuICAgICAgICBPYmplY3QuYXNzaWduKHRoaXMuZGF0YS5zb25nU2hlZXQsIE9iamVjdC5hc3NpZ24oe2lkOiBuZXdTb25nU2hlZXQuaWR9LCBuZXdTb25nU2hlZXQuYXR0cmlidXRlcykpXG4gICAgICAgIC8v6K6+572u5YWz6IGUXG4gICAgICAgIHRoaXMuZGF0YS5zb25nU2hlZXRTb25ncy5mb3JFYWNoKChzb25nU2hlZXRTb25nKT0+e1xuICAgICAgICAgIHZhciBzb25nID0gQVYuT2JqZWN0LmNyZWF0ZVdpdGhvdXREYXRhKCdTb25nJywgc29uZ1NoZWV0U29uZy5pZClcbiAgICAgICAgICBzb25nLnNldCgnZGVwZW5kZW50Jywgc29uZ1NoZWV0KVxuICAgICAgICAgIHNvbmcuc2F2ZSgpXG4gICAgICAgIH0pXG4gICAgICB9KVxuICAgIH0sXG4gICAgZGVsZXRlKGRhdGEpe1xuICAgICAgdmFyIHNvbmdTaGVldCA9IEFWLk9iamVjdC5jcmVhdGVXaXRob3V0RGF0YSgnU29uZ1NoZWV0JywgZGF0YS5zb25nU2hlZXQuaWQpXG4gICAgICByZXR1cm4gc29uZ1NoZWV0LmRlc3Ryb3koKS50aGVuKChzdWNjZXNzKSA9PiB7XG4gICAgICAgIHRoaXMuZGF0YSA9IHtzb25nU2hlZXQ6e25hbWU6JycsY292ZXI6JycsYnJpZWY6JycsaWQ6Jyd9LCBzb25nU2hlZXRTb25nczpbXX1cbiAgICAgICAgcmV0dXJuIHN1Y2Nlc3MuaWRcbiAgICAgIH0pXG4gICAgfSxcbiAgICByZW1vdmVEZXBlbmRlbnQoc29uZ1NoZWV0SWQpe1xuICAgICAgdmFyIHNvbmdTaGVldCA9IEFWLk9iamVjdC5jcmVhdGVXaXRob3V0RGF0YSgnU29uZ1NoZWV0Jywgc29uZ1NoZWV0SWQpO1xuICAgICAgdmFyIHF1ZXJ5ID0gbmV3IEFWLlF1ZXJ5KCdTb25nJyk7XG4gICAgICBxdWVyeS5lcXVhbFRvKCdkZXBlbmRlbnQnLCBzb25nU2hlZXQpO1xuICAgICAgcXVlcnkuZmluZCgpLnRoZW4oKHNvbmdzKSA9PiB7XG4gICAgICAgIHNvbmdzLm1hcCgoc29uZyk9PntcbiAgICAgICAgICB2YXIgc29uZyA9IEFWLk9iamVjdC5jcmVhdGVXaXRob3V0RGF0YSgnU29uZycsIHNvbmcuaWQpO1xuICAgICAgICAgIHZhciBzb25nU2hlZXQyID0gQVYuT2JqZWN0LmNyZWF0ZVdpdGhvdXREYXRhKCdTb25nU2hlZXQnLCAnNWIyYTI2Nzc5ZjU0NTQwMDM1YTk5MGZlJyk7XG4gICAgICAgICAgc29uZy5zZXQoJ2RlcGVuZGVudCcsIHNvbmdTaGVldDIpO1xuICAgICAgICAgIHJldHVybiBzb25nLnNhdmUoKVxuICAgICAgICB9KVxuICAgICAgfSlcbiAgICB9XG4gIH1cblxuICBsZXQgY29udHJvbGxlciA9IHtcbiAgICBpbml0KHZpZXcsIG1vZGVsKXtcbiAgICAgIHRoaXMudmlldyA9IHZpZXdcbiAgICAgIHRoaXMubW9kZWwgPSBtb2RlbFxuICAgICAgdGhpcy52aWV3LnJlbmRlcih0aGlzLm1vZGVsLmRhdGEpXG4gICAgICB0aGlzLmJpbmRFdmVudHMoKVxuICAgICAgdGhpcy5iaW5kRXZlbnRIdWIoKVxuICAgIH0sXG4gICAgY3JlYXRTb25nU2hlZXQoKXtcbiAgICAgIGxldCBuZWVkcyA9IFsnbmFtZScsICdicmllZicsJ2NvdmVyJ11cbiAgICAgIGxldCBkYXRhID0ge31cbiAgICAgIG5lZWRzLm1hcCgobmVlZCkgPT4ge1xuICAgICAgICAgIGRhdGFbbmVlZF0gPSAkKHRoaXMudmlldy5lbCkuZmluZChgW25hbWU9XCIke25lZWR9XCJdYCkudmFsKClcbiAgICAgIH0pXG4gICAgICB0aGlzLm1vZGVsLmNyZWF0ZShkYXRhKS50aGVuKCgpID0+IHtcbiAgICAgICAgd2luZG93LmV2ZW50SHViLmVtaXQoJ2NyZWF0U29uZ1NoZWV0U3VjY2VzcycsIEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkodGhpcy5tb2RlbC5kYXRhKSkpXG4gICAgICAgIHdpbmRvdy5ldmVudEh1Yi5lbWl0KCdjbGVhclNvbmdMaXN0QWNpdHZlJyx7c29uZ1NoZWV0OntuYW1lOicnLGNvdmVyOicnLGJyaWVmOicnLGlkOicnfSwgc29uZ1NoZWV0U29uZ3M6W119KVxuICAgICAgICB0aGlzLnZpZXcucmVzZXQoKVxuICAgICAgfSlcbiAgICB9LFxuICAgIHVwZGF0ZVNvbmdTaGVldCgpe1xuICAgICAgbGV0IG5lZWRzID0gWyduYW1lJywgJ2JyaWVmJywnY292ZXInXVxuICAgICAgbGV0IGRhdGEgPSB7fVxuICAgICAgbmVlZHMubWFwKChuZWVkKSA9PiB7XG4gICAgICAgICAgZGF0YVtuZWVkXSA9ICQodGhpcy52aWV3LmVsKS5maW5kKGBbbmFtZT1cIiR7bmVlZH1cIl1gKS52YWwoKVxuICAgICAgfSlcbiAgICAgIHRoaXMubW9kZWwudXBkYXRlKGRhdGEpLnRoZW4oKCkgPT4ge1xuICAgICAgICAvL+abtOaWsOaIkOWKn+WQjumAmuefpXNvbmctbGlzdOabtOaWsFxuICAgICAgICB3aW5kb3cuZXZlbnRIdWIuZW1pdCgndXBkYXRlU29uZ1NoZWV0JywgSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeSh0aGlzLm1vZGVsLmRhdGEpKSkgLy/lkIzkuIrpnaLnmoTmlrDlu7rvvIzpnIDopoHmt7Hmi7fotJ1cbiAgICAgIH0pXG5cbiAgICB9LFxuICAgIGRlbGV0ZVNvbmdTaGVldCgpe1xuICAgICAgdGhpcy5tb2RlbC5kZWxldGUodGhpcy5tb2RlbC5kYXRhKS50aGVuKChpZCkgPT4ge1xuICAgICAgICB3aW5kb3cuZXZlbnRIdWIuZW1pdCgnZGVsZXRlU29uZ1NoZWV0Jywge2lkOiBpZH0pXG4gICAgICAgIHdpbmRvdy5ldmVudEh1Yi5lbWl0KCdjbGVhclNvbmdMaXN0QWNpdHZlJyx7c29uZ1NoZWV0OntuYW1lOicnLGNvdmVyOicnLGJyaWVmOicnLGlkOicnfSwgc29uZ1NoZWV0U29uZ3M6W119KVxuICAgICAgICB0aGlzLnZpZXcucmVzZXQoKVxuICAgICAgfSlcbiAgICB9LFxuICAgIGJpbmRFdmVudHMoKXtcbiAgICAgICQodGhpcy52aWV3LmVsKS5vbignY2xpY2snLCAnbGknLCAoZSk9PntcbiAgICAgICAgbGV0IGlkID0gJChlLmN1cnJlbnRUYXJnZXQpLmF0dHIoJ2RhdGEtc29uZy1pZCcpXG4gICAgICAgIHRoaXMubW9kZWwuZGF0YS5zb25nU2hlZXRTb25ncyA9IHRoaXMubW9kZWwuZGF0YS5zb25nU2hlZXRTb25ncy5maWx0ZXIoKHNvbmdTaGVldFNvbmcpPT57XG4gICAgICAgICAgcmV0dXJuIHNvbmdTaGVldFNvbmcuaWQgIT09IGlkXG4gICAgICAgIH0pXG4gICAgICAgIHRoaXMudmlldy5yZW5kZXJTb25nTGlzdEJveCh0aGlzLm1vZGVsLmRhdGEpXG4gICAgICAgIHdpbmRvdy5ldmVudEh1Yi5lbWl0KCdkZWxldGVTb25nJywgSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeSh0aGlzLm1vZGVsLmRhdGEpKSlcbiAgICAgIH0pXG4gICAgICAkKHRoaXMudmlldy5lbCkub24oJ2NsaWNrJywgJy5jb25maXJtJywgKGUpID0+IHtcbiAgICAgICAgaWYodGhpcy5tb2RlbC5kYXRhLnNvbmdTaGVldC5pZCl7XG4gICAgICAgICAgLy9pZOWtmOWcqO+8jOebuOW9k+S6juW3suWtmOWFpeaVsOaNruW6k+eahO+8jOS/ruaUueeahOatjOWNlVxuICAgICAgICAgIHRoaXMudXBkYXRlU29uZ1NoZWV0KClcbiAgICAgICAgfWVsc2V7XG4gICAgICAgICAgLy9pZOS4jeWtmOWcqO+8jOebuOW9k+S6juacquWtmOWFpeaVsOaNruW6k+eahO+8jOaWsOW7uueahOatjOWNlVxuICAgICAgICAgIHRoaXMuY3JlYXRTb25nU2hlZXQoKVxuICAgICAgICB9XG4gICAgICB9KVxuICAgICAgJCh0aGlzLnZpZXcuZWwpLm9uKCdjbGljaycsICcuZGVsZXRlJywgKGUpID0+IHtcbiAgICAgICAgaWYodGhpcy5tb2RlbC5kYXRhLnNvbmdTaGVldC5pZCl7XG4gICAgICAgICAgdGhpcy5kZWxldGVTb25nU2hlZXQoKVxuICAgICAgICB9XG4gICAgICB9KVxuICAgIH0sXG4gICAgYmluZEV2ZW50SHViKCl7XG4gICAgICB3aW5kb3cuZXZlbnRIdWIub24oJ2FkZFNvbmcnLCAoZGF0YSk9PntcbiAgICAgICAgdGhpcy5tb2RlbC5kYXRhLnNvbmdTaGVldFNvbmdzID0gZGF0YS5zb25nU2hlZXRTb25nc1xuICAgICAgICB0aGlzLnZpZXcucmVuZGVyU29uZ0xpc3RCb3godGhpcy5tb2RlbC5kYXRhKVxuICAgICAgfSlcbiAgICAgIHdpbmRvdy5ldmVudEh1Yi5vbignc2VsZWN0U29uZ1NoZWV0JywgKGRhdGEpPT57XG4gICAgICAgIHRoaXMubW9kZWwuZGF0YSA9IGRhdGFcbiAgICAgICAgdGhpcy52aWV3LnJlbmRlcih0aGlzLm1vZGVsLmRhdGEpXG4gICAgICAgIHRoaXMudmlldy5yZW5kZXJTb25nTGlzdEJveCh0aGlzLm1vZGVsLmRhdGEpXG4gICAgICB9KVxuICAgICAgd2luZG93LmV2ZW50SHViLm9uKCduZXdTb25nU2hlZXQnLCgpID0+IHtcbiAgICAgICAgaWYodGhpcy5tb2RlbC5kYXRhLnNvbmdTaGVldC5pZCl7XG4gICAgICAgICAgdGhpcy5tb2RlbC5kYXRhID0ge3NvbmdTaGVldDp7bmFtZTonJyxjb3ZlcjonJyxicmllZjonJyxpZDonJ30sIHNvbmdTaGVldFNvbmdzOltdfVxuICAgICAgICAgIHRoaXMudmlldy5yZW5kZXIodGhpcy5tb2RlbC5kYXRhKVxuICAgICAgICAgIHdpbmRvdy5ldmVudEh1Yi5lbWl0KCdjbGVhclNvbmdMaXN0QWNpdHZlJywgSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeSh0aGlzLm1vZGVsLmRhdGEpKSlcbiAgICAgICAgfVxuICAgICAgfSlcbiAgICB9XG4gIH1cblxuICBjb250cm9sbGVyLmluaXQodmlldywgbW9kZWwpXG5cbn0iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpe1xuICBsZXQgdmlldyA9IHtcbiAgICBlbDogXCIuc29uZ0xpc3RcIixcbiAgICB0ZW1wbGF0ZTogYFxuICAgICAgPGxpPlxuICAgICAgICA8c3ZnIGNsYXNzPVwiaWNvbiBpY29uLW11c2ljXCIgYXJpYS1oaWRkZW49XCJ0cnVlXCI+XG4gICAgICAgICAgPHVzZSB4bGluazpocmVmPVwiI2ljb24tbXVzaWNcIj48L3VzZT5cbiAgICAgICAgPC9zdmc+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJzb25nSW5mb1wiPlxuICAgICAgICAgIDxwIHRpdGxlPVwie3tuYW1lfX1cIiBjbGFzcz1cInNvbmdcIj57e25hbWV9fTwvcD5cbiAgICAgICAgICA8cCB0aXRsZT1cInt7c2luZ2VyfX1cIiBjbGFzcz1cInNpbmdlclwiPlxuICAgICAgICAgICAgPHN2ZyBjbGFzcz1cImljb24gaWNvbi1tdXNpY1wiIGFyaWEtaGlkZGVuPVwidHJ1ZVwiPlxuICAgICAgICAgICAgICA8dXNlIHhsaW5rOmhyZWY9XCIjaWNvbi1nZXNob3VcIj48L3VzZT5cbiAgICAgICAgICAgIDwvc3ZnPlxuICAgICAgICAgICAge3tzaW5nZXJ9fVxuICAgICAgICAgIDwvcD5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2xpPlxuICAgIGAsXG4gICAgcmVuZGVyKGRhdGEpe1xuICAgICAgJCh0aGlzLmVsKS5lbXB0eSgpXG4gICAgICBsZXQge3NvbmdzLCBzb25nU2hlZXRTb25nc30gPSBkYXRhXG4gICAgICBzb25ncy5tYXAoKHNvbmcpID0+IHtcbiAgICAgICAgbGV0ICRsaSA9ICQoXG4gICAgICAgICAgdGhpcy50ZW1wbGF0ZS5yZXBsYWNlKC97e25hbWV9fS9nLCBzb25nLm5hbWUpXG4gICAgICAgICAgLnJlcGxhY2UoL3t7c2luZ2VyfX0vZywgc29uZy5zaW5nZXIpXG4gICAgICAgICkuYXR0cignZGF0YS1zb25nLWlkJywgc29uZy5pZClcbiAgICAgICAgZm9yKGxldCBpID0gMDsgaSA8IHNvbmdTaGVldFNvbmdzLmxlbmd0aDsgaSsrKXtcbiAgICAgICAgICBpZihzb25nU2hlZXRTb25nc1tpXS5pZCA9PT0gc29uZy5pZCl7XG4gICAgICAgICAgICAkbGkuYWRkQ2xhc3MoJ2FjdGl2ZScpXG4gICAgICAgICAgICBicmVha1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICAkKHRoaXMuZWwpLmFwcGVuZCgkbGkpXG4gICAgICB9KVxuICAgIH1cbiAgfVxuXG4gIGxldCBtb2RlbCA9IHtcbiAgICBkYXRhOiB7XG4gICAgICBzb25nczogW10sXG4gICAgICBzb25nU2hlZXRTb25nczogW11cbiAgICB9LFxuICAgIGZldGNoKCl7XG4gICAgICB2YXIgcXVlcnkgPSBuZXcgQVYuUXVlcnkoJ1NvbmcnKTtcbiAgICAgIHJldHVybiBxdWVyeS5maW5kKCkudGhlbigoc29uZ3MpID0+IHtcbiAgICAgICAgdGhpcy5kYXRhLnNvbmdzID0gc29uZ3MubWFwKChzb25nKSA9PiB7XG4gICAgICAgICAgcmV0dXJuIE9iamVjdC5hc3NpZ24oe2lkOiBzb25nLmlkfSwgc29uZy5hdHRyaWJ1dGVzKVxuICAgICAgICB9KVxuICAgICAgfSlcbiAgICB9XG4gIH1cblxuICBsZXQgY29udHJvbGxlciA9IHtcbiAgICBpbml0KHZpZXcsIG1vZGVsKXtcbiAgICAgIHRoaXMudmlldyA9IHZpZXdcbiAgICAgIHRoaXMubW9kZWwgPSBtb2RlbFxuICAgICAgdGhpcy5iaW5kRXZlbnRzKClcbiAgICAgIHRoaXMuYmluZEV2ZW50SHViKClcbiAgICAgIHRoaXMuZ2V0QWxsU29uZ3MoKVxuICAgIH0sXG4gICAgZ2V0QWxsU29uZ3MoKXtcbiAgICAgIHJldHVybiB0aGlzLm1vZGVsLmZldGNoKCkudGhlbigoKSA9PiB7XG4gICAgICAgIHRoaXMudmlldy5yZW5kZXIodGhpcy5tb2RlbC5kYXRhKVxuICAgICAgfSlcbiAgICB9LFxuICAgIGJpbmRFdmVudHMoKXtcbiAgICAgICQodGhpcy52aWV3LmVsKS5vbignY2xpY2snLCAnbGknLCAoZSkgPT4ge1xuICAgICAgICBsZXQgc29uZ0lkID0gJChlLmN1cnJlbnRUYXJnZXQpLmF0dHIoJ2RhdGEtc29uZy1pZCcpXG4gICAgICAgIGxldCBpc0FjdGl2ZSA9ICQoZS5jdXJyZW50VGFyZ2V0KS5oYXNDbGFzcygnYWN0aXZlJylcbiAgICAgICAgaWYoIWlzQWN0aXZlKXtcbiAgICAgICAgICBsZXQgc29uZ05hbWUgPSB0aGlzLm1vZGVsLmRhdGEuc29uZ3MuZmluZCgoc29uZyk9PntcbiAgICAgICAgICAgIHJldHVybiBzb25nLmlkID09PSBzb25nSWRcbiAgICAgICAgICB9KS5uYW1lXG4gICAgICAgICAgdGhpcy5tb2RlbC5kYXRhLnNvbmdTaGVldFNvbmdzLnB1c2goe2lkOiBzb25nSWQsIG5hbWU6IHNvbmdOYW1lfSlcbiAgICAgICAgfWVsc2V7XG4gICAgICAgICAgdGhpcy5tb2RlbC5kYXRhLnNvbmdTaGVldFNvbmdzID0gdGhpcy5tb2RlbC5kYXRhLnNvbmdTaGVldFNvbmdzLmZpbHRlcigoc29uZ1NoZWV0U29uZyk9PntcbiAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKHNvbmdTaGVldFNvbmcpXG4gICAgICAgICAgICByZXR1cm4gc29uZ1NoZWV0U29uZy5pZCAhPT0gc29uZ0lkXG4gICAgICAgICAgfSlcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMudmlldy5yZW5kZXIodGhpcy5tb2RlbC5kYXRhKVxuICAgICAgICBsZXQgb2JqZWN0ID0gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeSh0aGlzLm1vZGVsLmRhdGEpKVxuICAgICAgICB3aW5kb3cuZXZlbnRIdWIuZW1pdCgnYWRkU29uZycsIG9iamVjdClcbiAgICAgIH0pXG4gICAgfSxcbiAgICBiaW5kRXZlbnRIdWIoKXtcbiAgICAgIHdpbmRvdy5ldmVudEh1Yi5vbignZGVsZXRlU29uZycsIChkYXRhKT0+e1xuICAgICAgICB0aGlzLm1vZGVsLmRhdGEuc29uZ1NoZWV0U29uZ3MgPSAgZGF0YS5zb25nU2hlZXRTb25nc1xuICAgICAgICB0aGlzLnZpZXcucmVuZGVyKHRoaXMubW9kZWwuZGF0YSlcbiAgICAgIH0pXG4gICAgICB3aW5kb3cuZXZlbnRIdWIub24oJ3NlbGVjdFNvbmdTaGVldCcsIChkYXRhKT0+e1xuICAgICAgICB0aGlzLm1vZGVsLmRhdGEuc29uZ1NoZWV0U29uZ3MgPSBkYXRhLnNvbmdTaGVldFNvbmdzXG4gICAgICAgIHRoaXMudmlldy5yZW5kZXIodGhpcy5tb2RlbC5kYXRhKVxuICAgICAgfSlcbiAgICAgIHdpbmRvdy5ldmVudEh1Yi5vbignY2xlYXJTb25nTGlzdEFjaXR2ZScsIChkYXRhKT0+e1xuICAgICAgICB0aGlzLm1vZGVsLmRhdGEuc29uZ1NoZWV0U29uZ3MgPSBkYXRhLnNvbmdTaGVldFNvbmdzXG4gICAgICAgIHRoaXMudmlldy5yZW5kZXIodGhpcy5tb2RlbC5kYXRhKVxuICAgICAgfSlcbiAgICB9XG4gIH1cblxuICBjb250cm9sbGVyLmluaXQodmlldywgbW9kZWwpXG5cbn0iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpe1xuICBsZXQgdmlldyA9IHtcbiAgICBlbDogJy5zb25nU2hlZXRMaXN0JyxcbiAgICB0ZW1wbGF0ZTogYFxuICAgICAgPGxpPlxuICAgICAgICA8c3ZnIGNsYXNzPVwiaWNvbiBpY29uLXBsYXlsaXN0XCIgYXJpYS1oaWRkZW49XCJ0cnVlXCI+XG4gICAgICAgICAgICA8dXNlIHhsaW5rOmhyZWY9XCIjaWNvbi1wbGF5bGlzdFwiPjwvdXNlPlxuICAgICAgICA8L3N2Zz5cbiAgICAgICAgPHAgdGl0bGU9XCJ7e25hbWV9fVwiIGNsYXNzPVwic29uZ1wiPnt7bmFtZX19PC9wPlxuICAgICAgPC9saT5cbiAgICBgLFxuICAgIHJlbmRlcihkYXRhKXtcbiAgICAgICQodGhpcy5lbCkuZW1wdHkoKVxuICAgICAgbGV0IHtzb25nU2hlZXRzLCBzZWxlY3RTb25nU2hlZXRJZH0gPSBkYXRhXG4gICAgICBzb25nU2hlZXRzLm1hcCgoc29uZ1NoZWV0KT0+e1xuICAgICAgICBsZXQgJGxpID0gJChcbiAgICAgICAgICB0aGlzLnRlbXBsYXRlLnJlcGxhY2UoL3t7bmFtZX19L2csIHNvbmdTaGVldC5uYW1lfHwn5peg5ZCN5q2M5Y2VJylcbiAgICAgICAgKS5hdHRyKCdkYXRhLXNvbmdTaGVldC1pZCcsIHNvbmdTaGVldC5pZClcbiAgICAgICAgaWYoc29uZ1NoZWV0LmlkID09PSBzZWxlY3RTb25nU2hlZXRJZCl7XG4gICAgICAgICAgJGxpLmFkZENsYXNzKCdhY3RpdmUnKVxuICAgICAgICB9XG4gICAgICAgICQodGhpcy5lbCkuYXBwZW5kKCRsaSlcbiAgICAgIH0pXG4gICAgfSxcbiAgICBjbGVhckFjdGl2ZSgpe1xuICAgICAgJCh0aGlzLmVsKS5maW5kKCcuYWN0aXZlJykucmVtb3ZlQ2xhc3MoJ2FjdGl2ZScpXG4gICAgfVxuXG4gIH1cblxuICBsZXQgbW9kZWwgPSB7XG4gICAgZGF0YToge1xuICAgICAgc29uZ1NoZWV0czogW10sXG4gICAgICBzZWxlY3RTb25nU2hlZXRJZDogdW5kZWZpbmVkLFxuICAgICAgc2VsZWN0U29uZ1NoZWV0U29uZ3M6IFtdXG4gICAgfSxcbiAgICBmZXRjaCgpe1xuICAgICAgdmFyIHF1ZXJ5ID0gbmV3IEFWLlF1ZXJ5KCdTb25nU2hlZXQnKTtcbiAgICAgIHJldHVybiBxdWVyeS5maW5kKCkudGhlbigoc29uZ1NoZWV0cykgPT4ge1xuICAgICAgICB0aGlzLmRhdGEuc29uZ1NoZWV0cyA9IHNvbmdTaGVldHMubWFwKChzb25nU2hlZXQpID0+IHtcbiAgICAgICAgICByZXR1cm4gT2JqZWN0LmFzc2lnbih7aWQ6IHNvbmdTaGVldC5pZH0sIHNvbmdTaGVldC5hdHRyaWJ1dGVzKVxuICAgICAgICB9KVxuICAgICAgfSlcbiAgICB9LFxuICAgIGZpbmRTb25nU2hlZXRTb25ncyhzb25nU2hlZXRJZCl7XG4gICAgICB2YXIgc29uZ1NoZWV0ID0gQVYuT2JqZWN0LmNyZWF0ZVdpdGhvdXREYXRhKCdTb25nU2hlZXQnLCBzb25nU2hlZXRJZCk7XG4gICAgICB2YXIgcXVlcnkgPSBuZXcgQVYuUXVlcnkoJ1NvbmcnKTtcbiAgICAgIHF1ZXJ5LmVxdWFsVG8oJ2RlcGVuZGVudCcsIHNvbmdTaGVldCk7XG4gICAgICByZXR1cm4gcXVlcnkuZmluZCgpLnRoZW4oKHNvbmdzKSA9PiB7XG4gICAgICAgIHRoaXMuZGF0YS5zZWxlY3RTb25nU2hlZXRTb25ncyA9IHNvbmdzLm1hcCgoc29uZyk9PntcbiAgICAgICAgICByZXR1cm4gT2JqZWN0LmFzc2lnbih7aWQ6IHNvbmcuaWR9LCBzb25nLmF0dHJpYnV0ZXMpXG4gICAgICAgIH0pXG4gICAgICB9KVxuICAgIH1cbiAgfVxuXG4gIGxldCBjb250cm9sbGVyID0ge1xuICAgIGluaXQodmlldywgbW9kZWwpe1xuICAgICAgdGhpcy52aWV3ID0gdmlld1xuICAgICAgdGhpcy5tb2RlbCA9IG1vZGVsXG4gICAgICB0aGlzLmJpbmRFdmVudHMoKVxuICAgICAgdGhpcy5iaW5kRXZlbnRIdWIoKVxuICAgICAgdGhpcy5nZXRBbGxTb25nU2hlZXRzKClcbiAgICB9LFxuICAgIGdldEFsbFNvbmdTaGVldHMoKXtcbiAgICAgIHJldHVybiB0aGlzLm1vZGVsLmZldGNoKCkudGhlbigoKSA9PiB7XG4gICAgICAgIHRoaXMudmlldy5yZW5kZXIodGhpcy5tb2RlbC5kYXRhKVxuICAgICAgfSlcbiAgICB9LFxuICAgIGJpbmRFdmVudHMoKXtcbiAgICAgICQodGhpcy52aWV3LmVsKS5vbignY2xpY2snLCAnbGknLCAoZSkgPT4ge1xuICAgICAgICBsZXQgc29uZ1NoZWV0SWQgPSAkKGUuY3VycmVudFRhcmdldCkuYXR0cignZGF0YS1zb25nU2hlZXQtaWQnKVxuICAgICAgICB0aGlzLm1vZGVsLmRhdGEuc2VsZWN0U29uZ1NoZWV0SWQgPSBzb25nU2hlZXRJZFxuICAgICAgICB0aGlzLnZpZXcucmVuZGVyKHRoaXMubW9kZWwuZGF0YSlcbiAgICAgICAgdGhpcy5tb2RlbC5maW5kU29uZ1NoZWV0U29uZ3ModGhpcy5tb2RlbC5kYXRhLnNlbGVjdFNvbmdTaGVldElkKS50aGVuKCgpPT57XG4gICAgICAgICAgbGV0IGRhdGEgPSB7fVxuICAgICAgICAgIGRhdGFbJ3NvbmdTaGVldFNvbmdzJ10gPSB0aGlzLm1vZGVsLmRhdGEuc2VsZWN0U29uZ1NoZWV0U29uZ3NcbiAgICAgICAgICBsZXQgc29uZ1NoZWV0cyA9IHRoaXMubW9kZWwuZGF0YS5zb25nU2hlZXRzXG4gICAgICAgICAgZm9yKGxldCBpID0gMDsgaSA8IHNvbmdTaGVldHMubGVuZ3RoOyBpKyspe1xuICAgICAgICAgICAgaWYoc29uZ1NoZWV0c1tpXS5pZCA9PT0gc29uZ1NoZWV0SWQpe1xuICAgICAgICAgICAgICBkYXRhWydzb25nU2hlZXQnXSA9IHNvbmdTaGVldHNbaV1cbiAgICAgICAgICAgICAgYnJlYWtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgICAgbGV0IG9iamVjdCA9IEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkoZGF0YSkpXG4gICAgICAgICAgd2luZG93LmV2ZW50SHViLmVtaXQoJ3NlbGVjdFNvbmdTaGVldCcsIG9iamVjdClcbiAgICAgICAgfSlcbiAgICAgIH0pXG4gICAgfSxcbiAgICBiaW5kRXZlbnRIdWIoKXtcbiAgICAgIHdpbmRvdy5ldmVudEh1Yi5vbignY3JlYXRTb25nU2hlZXRTdWNjZXNzJywgKGRhdGEpPT57XG4gICAgICAgIHRoaXMubW9kZWwuZGF0YS5zb25nU2hlZXRzLnB1c2goZGF0YS5zb25nU2hlZXQpXG4gICAgICAgIHRoaXMudmlldy5yZW5kZXIodGhpcy5tb2RlbC5kYXRhKVxuICAgICAgfSlcbiAgICAgIHdpbmRvdy5ldmVudEh1Yi5vbignZGVsZXRlU29uZ1NoZWV0JywgKGRhdGEpPT57XG4gICAgICAgIHRoaXMubW9kZWwuZGF0YS5zb25nU2hlZXRzID0gdGhpcy5tb2RlbC5kYXRhLnNvbmdTaGVldHMuZmlsdGVyKChzb25nU2hlZXQpID0+IHtcbiAgICAgICAgICByZXR1cm4gc29uZ1NoZWV0LmlkICE9PSBkYXRhLmlkXG4gICAgICAgIH0pXG4gICAgICAgIHRoaXMubW9kZWwuZGF0YS5zZWxlY3RTb25nU2hlZXRJZCA9IHVuZGVmaW5lZFxuICAgICAgICB0aGlzLnZpZXcucmVuZGVyKHRoaXMubW9kZWwuZGF0YSlcbiAgICAgIH0pXG4gICAgICB3aW5kb3cuZXZlbnRIdWIub24oJ25ld1NvbmdTaGVldCcsICgpID0+IHtcbiAgICAgICAgdGhpcy52aWV3LmNsZWFyQWN0aXZlKClcbiAgICAgICAgdGhpcy5tb2RlbC5kYXRhLnNlbGVjdFNvbmdTaGVldFNvbmdzID0gW11cbiAgICAgICAgdGhpcy5tb2RlbC5kYXRhLnNlbGVjdFNvbmdTaGVldElkID0gdW5kZWZpbmVkXG4gICAgICB9KVxuICAgICAgd2luZG93LmV2ZW50SHViLm9uKCd1cGRhdGVTb25nU2hlZXQnLCAoZGF0YSkgPT4ge1xuICAgICAgICBsZXQgc29uZ1NoZWV0cyA9IHRoaXMubW9kZWwuZGF0YS5zb25nU2hlZXRzXG4gICAgICAgIGZvcihsZXQgaSA9IDA7IGkgPCBzb25nU2hlZXRzLmxlbmd0aDsgaSsrKXtcbiAgICAgICAgICBpZihzb25nU2hlZXRzW2ldLmlkID09PSBkYXRhLnNvbmdTaGVldC5pZCl7XG4gICAgICAgICAgICBzb25nU2hlZXRzW2ldID0gZGF0YS5zb25nU2hlZXRcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy52aWV3LnJlbmRlcih0aGlzLm1vZGVsLmRhdGEpXG4gICAgICB9KVxuICAgIH1cbiAgfVxuXG4gIGNvbnRyb2xsZXIuaW5pdCh2aWV3LCBtb2RlbClcbn0iXSwic291cmNlUm9vdCI6IiJ9