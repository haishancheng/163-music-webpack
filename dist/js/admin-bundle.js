!function(e){var n={};function t(i){if(n[i])return n[i].exports;var o=n[i]={i:i,l:!1,exports:{}};return e[i].call(o.exports,o,o.exports,t),o.l=!0,o.exports}t.m=e,t.c=n,t.d=function(e,n,i){t.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:i})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,n){if(1&n&&(e=t(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var i=Object.create(null);if(t.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var o in e)t.d(i,o,function(n){return e[n]}.bind(null,o));return i},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p="",t(t.s=12)}({0:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.default=function(){window.eventHub={events:{},emit:function(e,n){for(var t in this.events)t===e&&this.events[t].map(function(e){e.call(void 0,n)})},on:function(e,n){void 0===this.events[e]&&(this.events[e]=[]),this.events[e].push(n)}}}},1:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.default=function(){AV.init({appId:"IbKHNlRGRAFjYmmzC1gxhtdE-gzGzoHsz",appKey:"6SlQPqCcy8KwHVEhJpFeBFpG"})}},10:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.default=function(){({init:function(e,n){var t=this;this.view=e,this.model=n,window.eventHub.on("beforeUpload",function(){t.view.show()}),window.eventHub.on("afterUpload",function(){t.view.hide()})}}).init({el:"#siteLoading",show:function(){$(this.el).addClass("active")},hide:function(){$(this.el).removeClass("active")}},{})}},11:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var i=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i])}return e};n.default=function(){({init:function(e,n){this.view=e,this.model=n,this.view.render(this.model.data),this.bindEvents(),this.bindEventHub()},create:function(){var e=this,n={};["name","singer","url","cover","lyrics","isHot","isNewest"].map(function(t){n[t]="isHot"===t?$(e.view.el).find(".isHot").is(":checked"):"isNewest"===t?$(e.view.el).find(".isNewest").is(":checked"):$(e.view.el).find('[name="'+t+'"]').val()}),this.model.create(n).then(function(){e.view.reset();var n=JSON.stringify(e.model.data),t=JSON.parse(n);window.eventHub.emit("create",t),e.model.data={name:"",singer:"",url:"",id:"",cover:"",lyrics:"",isHot:!1,isNewest:!1}})},update:function(){var e=this,n={};["name","singer","url","cover","lyrics","isHot","isNewest"].map(function(t){n[t]="isHot"===t?$(e.view.el).find(".isHot").is(":checked"):"isNewest"===t?$(e.view.el).find(".isNewest").is(":checked"):$(e.view.el).find('[name="'+t+'"]').val()}),this.model.update(n).then(function(){window.eventHub.emit("update",JSON.parse(JSON.stringify(e.model.data)))})},delete:function(){this.model.delete(this.model.data).then(function(e){window.eventHub.emit("delete",{id:e})})},bindEvents:function(){var e=this;$(this.view.el).on("click",".confirm",function(n){e.model.data.id?e.update():e.create()}),$(this.view.el).on("click",".delete",function(n){e.model.data.id&&e.delete()})},bindEventHub:function(){var e=this;window.eventHub.on("select",function(n){e.model.data=n,e.view.show(),e.view.render(e.model.data)}),window.eventHub.on("new",function(n){e.model.data.id&&(e.model.data={name:"",singer:"",url:"",id:"",cover:"",lyrics:"",isHot:!1,isNewest:!1},e.view.hide())}),window.eventHub.on("afterUpload",function(n){e.view.show(),i(e.model.data,n),e.view.render(e.model.data)}),window.eventHub.on("create",function(){e.view.hide()}),window.eventHub.on("delete",function(){e.view.hide()})}}).init({el:".infoPage",template:'\n      <div class="showArea">\n          <h1>编辑歌曲</h1>\n          <div class="row">\n            <label>歌曲名称</label>\n            <input type="text" name="name" value="__name__">\n          </div>\n          <div class="row">\n            <label>歌手</label>\n            <input type="text" name="singer" value="__singer__">\n          </div>\n          <div class="row">\n            <label>歌曲外链</label>\n            <input type="text" name="url" value="__url__">\n          </div>\n          <div class="row">\n            <label>封面外链</label>\n            <input type="text" name="cover" value="__cover__">\n          </div>\n          <div class="row">\n            <label>歌词</label>\n            <textarea name="lyrics">__lyrics__</textarea>\n          </div>\n          <div class="row action">\n            <div class="hotSong">\n              <label>热门歌曲</label>\n              <svg class="icon icon-hot" aria-hidden="true">\n                <use xlink:href="#icon-hot"></use>\n              </svg>\n              <input class="isHot" type="checkbox"/>\n            </div>\n            <div class="newestSong">\n              <label>最新歌曲</label>\n              <svg class="icon icon-newest" aria-hidden="true">\n                <use xlink:href="#icon-newest"></use>\n              </svg>\n              <input class="isNewest" type="checkbox"/>\n            </div>\n          </div>\n          <div class="button-wrapper">\n              <div class="button delete">删&nbsp;&nbsp;除</div>\n              <div class="button confirm">确&nbsp;&nbsp;定</div>\n          </div>\n      </div>\n    ',render:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=this.template;["name","singer","url","id","cover","lyrics"].map(function(t){n=n.replace("__"+t+"__",e[t]||"")}),$(this.el).html(n),$(this.el).find(".hotSong .isHot").prop("checked",e.isHot||!1),$(this.el).find(".newestSong .isNewest").prop("checked",e.isNewest||!1)},reset:function(){this.render({})},show:function(){$(this.el).addClass("active")},hide:function(){$(this.el).removeClass("active")}},{data:{name:"",singer:"",url:"",id:"",cover:"",lyrics:"",isHot:!1,isNewest:!1},create:function(e){var n=this;return(new(AV.Object.extend("Song"))).save(e).then(function(e){var t=e.id,o=e.attributes;i(n.data,i({id:t},o))})},update:function(e){var n=this,t=AV.Object.createWithoutData("Song",this.data.id);return t.set("name",e.name),t.set("singer",e.singer),t.set("url",e.url),t.set("cover",e.cover),t.set("lyrics",e.lyrics),t.set("isHot",e.isHot),t.set("isNewest",e.isNewest),t.save().then(function(e){i(n.data,i({id:e.id},e.attributes))})},delete:function(e){var n=this;return AV.Object.createWithoutData("Song",this.data.id).destroy().then(function(e){return n.data={name:"",singer:"",url:"",id:"",cover:"",lyrics:"",isHot:!1,isNewest:!1},e.id})}})}},12:function(e,n,t){"use strict";t(30);var i=l(t(1)),o=l(t(0)),s=l(t(11)),a=(l(t(10)),l(t(9))),d=l(t(8)),r=l(t(7));function l(e){return e&&e.__esModule?e:{default:e}}(0,i.default)(),(0,o.default)(),(0,s.default)(),(0,a.default)(),(0,d.default)(),(0,r.default)()},30:function(e,n){},7:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.default=function(){({init:function(e,n){this.view=e,this.model=n,this.initQiniu(),this.bindEventHub()},bindEventHub:function(){var e=this;window.eventHub.on("select",function(){e.model.data.isEditing=!1,e.view.hide()}),window.eventHub.on("new",function(){e.model.data.isEditing||(e.model.data.isEditing=!1,e.view.show())}),window.eventHub.on("afterUpload",function(){e.view.hide(),e.model.data.isEditing=!0}),window.eventHub.on("create",function(){e.model.data.isEditing=!1,e.view.show()}),window.eventHub.on("delete",function(){e.model.data.isEditing=!1,e.view.show()})},initQiniu:function(){var e=this;Qiniu.uploader({runtimes:"html5",browse_button:$(this.view.el).find("#uploadButton")[0],uptoken_url:"http://127.0.0.1:8888/uptoken",get_new_uptoken:!1,domain:"p9lfootse.bkt.clouddn.com",max_file_size:"40mb",dragdrop:!0,drop_element:$(this.view.el).find("#uploadContainer")[0],auto_start:!0,init:{FilesAdded:function(e,n){plupload.each(n,function(e){})},BeforeUpload:function(n,t){e.model.data.isloading||(window.eventHub.emit("beforeUpload"),e.model.data.isloading=!0)},UploadProgress:function(n,t){e.view.loadProgressBar(t.percent)},FileUploaded:function(n,t,i){e.view.resetLoadProgressBar(),e.model.data.isloading=!1;var o=n.getOption("domain"),s=JSON.parse(i.response),a="http://"+o+"/"+encodeURIComponent(s.key);window.eventHub.emit("afterUpload",{url:a,name:s.key})},Error:function(e,n,t){this.model.data.isloading=!1,console.log("上传失败，请打开本地服务器node server.js 8888")},UploadComplete:function(){}}})}}).init({el:".uploadPage",loadProgressBar:function(e){var n=$(this.el).find(".loading").width(e+"%").width();$(this.el).find(".loading").width(n-10)},resetLoadProgressBar:function(){$(this.el).find(".loading").width(0)},show:function(){$(this.el).addClass("active")},hide:function(){$(this.el).removeClass("active")}},{data:{isloading:!1,isEditing:!1}})}},8:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var i=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i])}return e};n.default=function(){({init:function(e,n){this.view=e,this.model=n,this.bindEvents(),this.bindEventHub(),this.getAllSongs()},getAllSongs:function(){var e=this;return this.model.fetch().then(function(){e.view.render(e.model.data)})},bindEvents:function(){var e=this;$(this.view.el).on("click","li",function(n){var t=$(n.currentTarget).attr("data-song-id");e.model.data.selectSongId=t,e.view.render(e.model.data);for(var i=void 0,o=e.model.data.songs,s=0;s<o.length;s++)if(o[s].id===t){i=o[s];break}var a=JSON.parse(JSON.stringify(i));window.eventHub.emit("select",a)})},bindEventHub:function(){var e=this;window.eventHub.on("create",function(n){e.model.data.songs.push(n),e.model.data.selectSongId=void 0,e.view.render(e.model.data)}),window.eventHub.on("new",function(){e.view.clearActive()}),window.eventHub.on("update",function(n){for(var t=e.model.data.songs,i=0;i<t.length;i++)t[i].id===n.id&&(t[i]=n);e.view.render(e.model.data)}),window.eventHub.on("delete",function(n){e.model.data.songs=e.model.data.songs.filter(function(e){return e.id!==n.id}),e.model.data.selectSongId=void 0,e.view.render(e.model.data)})}}).init({el:".songList",template:'\n        <li>\n          <svg class="icon icon-music" aria-hidden="true">\n              <use xlink:href="#icon-music"></use>\n          </svg>\n          <div class="songInfo">\n            <p title="{{name}}" class="song">{{name}}</p>\n            <p title="{{singer}}" class="singer">\n              <svg class="icon icon-music" aria-hidden="true">\n                  <use xlink:href="#icon-geshou"></use>\n              </svg>\n              {{singer}}\n            </p>\n          </div>\n          <svg class="icon icon-hot" aria-hidden="true">\n            <use xlink:href="#icon-hot"></use>\n          </svg>\n          <svg class="icon icon-newest" aria-hidden="true">\n            <use xlink:href="#icon-newest"></use>\n          </svg>\n        </li>\n    ',render:function(e){var n=this;$(this.el).empty();var t=e.songs,i=e.selectSongId;t.map(function(e){var t=$(n.template.replace(/{{name}}/g,e.name).replace(/{{singer}}/g,e.singer)).attr("data-song-id",e.id);e.isHot?t.find("svg.icon-hot").show():t.find("svg.icon-hot").hide(),e.isNewest?t.find("svg.icon-newest").show():t.find("svg.icon-newest").hide(),e.id===i&&t.addClass("active"),$(n.el).append(t)})},clearActive:function(){$(this.el).find(".active").removeClass("active")}},{data:{songs:[],selectSongId:void 0},fetch:function(){var e=this;return new AV.Query("Song").find().then(function(n){e.data.songs=n.map(function(e){return i({id:e.id},e.attributes)})})}})}},9:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.default=function(){({init:function(e,n){this.view=e,this.model=n,this.view.render(this.model.data),this.view.active(),this.bindEvents(),this.bindEventHub()},bindEvents:function(){var e=this;$(this.view.el).on("click",function(){e.view.active(),window.eventHub.emit("new")})},bindEventHub:function(){var e=this;window.eventHub.on("new",function(){e.view.active()}),window.eventHub.on("select",function(n){e.view.deActive()}),window.eventHub.on("create",function(){e.view.active()}),window.eventHub.on("delete",function(){e.view.active()})}}).init({el:".newSong",template:"\n      新建歌曲\n    ",render:function(e){$(this.el).html(this.template)},active:function(){$(this.el).addClass("active")},deActive:function(){$(this.el).removeClass("active")}},{})}}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,